{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport { useStore } from 'vuex';\nimport { computed } from 'vue';\nexport default {\n  props: {\n    href: {\n      type: String,\n      default: null\n    },\n    to: {\n      type: String,\n      default: null\n    },\n    type: {\n      type: String,\n      default: 'flex'\n    },\n    activeColor: {\n      type: String,\n      default: null\n    },\n    hasDivider: Boolean,\n    isDesktopIconOnly: Boolean,\n    dropdown: Boolean,\n    active: Boolean\n  },\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var props = __props;\n    var is = computed(function () {\n      if (props.href) {\n        return 'a';\n      }\n\n      if (props.to) {\n        return 'router-link';\n      }\n\n      return 'div';\n    });\n    var store = useStore();\n    var componentClass = computed(function () {\n      var _props$activeColor;\n\n      var activeColor = (_props$activeColor = props.activeColor) !== null && _props$activeColor !== void 0 ? _props$activeColor : \"\".concat(store.state.navBarItemLabelActiveColorStyle, \" dark:text-gray-400\");\n      var base = [props.type, 'items-center', 'grow-0', 'shrink-0', 'relative', 'cursor-pointer', props.active ? activeColor : \"\".concat(store.state.navBarItemLabelStyle, \" dark:text-white dark:hover:text-gray-400 \").concat(store.state.navBarItemLabelHoverStyle)];\n\n      if (props.type === 'block') {\n        base.push('lg:flex');\n      }\n\n      if (!props.dropdown) {\n        base.push('py-2', 'px-3');\n      } else {\n        base.push('p-0', 'lg:py-2', 'lg:px-3');\n      }\n\n      if (props.hasDivider) {\n        base.push('lg:border-r', store.state.lightBorderStyle, 'lg:dark:border-gray-800');\n      }\n\n      if (props.isDesktopIconOnly) {\n        base.push('lg:w-16', 'lg:justify-center');\n      }\n\n      return base;\n    });\n    var activeClass = computed(function () {\n      return is.value === 'router-link' ? props.activeColor : null;\n    });\n    var __returned__ = {\n      props: props,\n      is: is,\n      store: store,\n      componentClass: componentClass,\n      activeClass: activeClass,\n      useStore: useStore,\n      computed: computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";AACA,SAASA,QAAT,QAAyB,MAAzB;AACA,SAASC,QAAT,QAAyB,KAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,QAAMC,EAAE,GAAGD,QAAQ,CAAC,YAAM;AACxB,UAAIE,KAAK,CAACC,IAAV,EAAgB;AACd,eAAO,GAAP;AACD;;AAED,UAAID,KAAK,CAACE,EAAV,EAAc;AACZ,eAAO,aAAP;AACD;;AAED,aAAO,KAAP;AACD,KAVkB,CAAnB;AAYA,QAAMC,KAAK,GAAGN,QAAQ,EAAtB;AAEA,QAAMO,cAAc,GAAGN,QAAQ,CAAC,YAAM;AAAA;;AACpC,UAAMO,WAAW,yBAAGL,KAAK,CAACK,WAAT,6EAA2BF,KAAK,CAACG,KAAN,CAAYC,+BAAvC,wBAAjB;AAEA,UAAMC,IAAI,GAAG,CACXR,KAAK,CAACS,IADK,EAEX,cAFW,EAGX,QAHW,EAIX,UAJW,EAKX,UALW,EAMX,gBANW,EAOXT,KAAK,CAACU,MAAN,GACIL,WADJ,aAEOF,KAAK,CAACG,KAAN,CAAYK,oBAFnB,uDAEoFR,KAAK,CAACG,KAAN,CAAYM,yBAFhG,CAPW,CAAb;;AAYA,UAAIZ,KAAK,CAACS,IAAN,KAAe,OAAnB,EAA4B;AAC1BD,YAAI,CAACK,IAAL,CAAU,SAAV;AACD;;AAED,UAAI,CAACb,KAAK,CAACc,QAAX,EAAqB;AACnBN,YAAI,CAACK,IAAL,CAAU,MAAV,EAAkB,MAAlB;AACD,OAFD,MAEO;AACLL,YAAI,CAACK,IAAL,CAAU,KAAV,EAAiB,SAAjB,EAA4B,SAA5B;AACD;;AAED,UAAIb,KAAK,CAACe,UAAV,EAAsB;AACpBP,YAAI,CAACK,IAAL,CAAU,aAAV,EAAyBV,KAAK,CAACG,KAAN,CAAYU,gBAArC,EAAuD,yBAAvD;AACD;;AAED,UAAIhB,KAAK,CAACiB,iBAAV,EAA6B;AAC3BT,YAAI,CAACK,IAAL,CAAU,SAAV,EAAqB,mBAArB;AACD;;AAED,aAAOL,IAAP;AACD,KAlC8B,CAA/B;AAoCA,QAAMU,WAAW,GAAGpB,QAAQ,CAAC,YAAM;AACjC,aAAOC,EAAE,CAACoB,KAAH,KAAa,aAAb,GAA6BnB,KAAK,CAACK,WAAnC,GAAiD,IAAxD;AACD,KAF2B,CAA5B","names":["useStore","computed","is","props","href","to","store","componentClass","activeColor","state","navBarItemLabelActiveColorStyle","base","type","active","navBarItemLabelStyle","navBarItemLabelHoverStyle","push","dropdown","hasDivider","lightBorderStyle","isDesktopIconOnly","activeClass","value"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/NavBarItem.vue"],"sourcesContent":["<script setup>\nimport { useStore } from 'vuex'\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  href: {\n    type: String,\n    default: null\n  },\n  to: {\n    type: String,\n    default: null\n  },\n  type: {\n    type: String,\n    default: 'flex'\n  },\n  activeColor: {\n    type: String,\n    default: null\n  },\n  hasDivider: Boolean,\n  isDesktopIconOnly: Boolean,\n  dropdown: Boolean,\n  active: Boolean\n})\n\nconst is = computed(() => {\n  if (props.href) {\n    return 'a'\n  }\n\n  if (props.to) {\n    return 'router-link'\n  }\n\n  return 'div'\n})\n\nconst store = useStore()\n\nconst componentClass = computed(() => {\n  const activeColor = props.activeColor ?? `${store.state.navBarItemLabelActiveColorStyle} dark:text-gray-400`\n\n  const base = [\n    props.type,\n    'items-center',\n    'grow-0',\n    'shrink-0',\n    'relative',\n    'cursor-pointer',\n    props.active\n      ? activeColor\n      : `${store.state.navBarItemLabelStyle} dark:text-white dark:hover:text-gray-400 ${store.state.navBarItemLabelHoverStyle}`\n  ]\n\n  if (props.type === 'block') {\n    base.push('lg:flex')\n  }\n\n  if (!props.dropdown) {\n    base.push('py-2', 'px-3')\n  } else {\n    base.push('p-0', 'lg:py-2', 'lg:px-3')\n  }\n\n  if (props.hasDivider) {\n    base.push('lg:border-r', store.state.lightBorderStyle, 'lg:dark:border-gray-800')\n  }\n\n  if (props.isDesktopIconOnly) {\n    base.push('lg:w-16', 'lg:justify-center')\n  }\n\n  return base\n})\n\nconst activeClass = computed(() => {\n  return is.value === 'router-link' ? props.activeColor : null\n})\n</script>\n\n<template>\n  <component\n    :is=\"is\"\n    :class=\"componentClass\"\n    :to=\"to\"\n    :href=\"href\"\n    :exact-active-class=\"activeClass\"\n  >\n    <slot />\n  </component>\n</template>\n"]},"metadata":{},"sourceType":"module"}