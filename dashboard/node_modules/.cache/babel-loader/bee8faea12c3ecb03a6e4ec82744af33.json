{"ast":null,"code":"import { computed } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  props: {\n    navBar: Boolean\n  },\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var props = __props;\n    var store = useStore();\n    var lightBorderStyle = computed(function () {\n      return store.state.lightBorderStyle;\n    });\n    var __returned__ = {\n      props: props,\n      store: store,\n      lightBorderStyle: lightBorderStyle,\n      computed: computed,\n      useStore: useStore\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AACA,SAASA,QAAT,QAAyB,KAAzB;AACA,SAASC,QAAT,QAAyB,MAAzB;;;;;;;;;AAMA,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;AAEA,QAAME,gBAAgB,GAAGH,QAAQ,CAAC;AAAA,aAAME,KAAK,CAACE,KAAN,CAAYD,gBAAlB;AAAA,KAAD,CAAjC","names":["computed","useStore","store","lightBorderStyle","state"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/Divider.vue"],"sourcesContent":["<script setup>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\n\nconst props = defineProps({\n  navBar: Boolean\n})\n\nconst store = useStore()\n\nconst lightBorderStyle = computed(() => store.state.lightBorderStyle)\n</script>\n\n<template>\n  <hr\n    :class=\"[lightBorderStyle, props.navBar ? 'hidden lg:block lg:my-0.5 dark:border-gray-700' : 'my-6 -mx-6 dark:border-gray-800']\"\n    class=\"border-t\"\n  >\n</template>\n"]},"metadata":{},"sourceType":"module"}