{"ast":null,"code":"import { createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex items-center space-x-4\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Job Posting Dashboard\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"grid grid-cols-1 gap-6 lg:grid-cols-3 mb-6\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" Click on applicants to view the interview prep doc or the analytics sheet. \");\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"TitleBar\"], {\n    \"title-stack\": $setup.titleStack\n  }, null, 8 /* PROPS */, [\"title-stack\"]), _createVNode($setup[\"HeroBar\"], null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, $setup.organizationJobs.length ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n      key: 0,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedJob = $event),\n      class: \"rounded-lg border-gray-300 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-300\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.organizationJobs, job => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: job.id,\n        value: job\n      }, _toDisplayString(job.id), 9 /* TEXT, PROPS */, _hoisted_3);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */)), [[_vModelSelect, $setup.selectedJob]]) : _createCommentVNode(\"v-if\", true)])]),\n    _: 1 /* STABLE */\n  }), _createVNode($setup[\"MainSection\"], null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [_createVNode($setup[\"CardWidget\"], {\n      icon: $setup.mdiAccountMultiple,\n      number: $setup.selectedJobApplicationsCount,\n      label: 'Applications for ' + ($setup.selectedJob?.name || 'All Jobs'),\n      color: \"text-emerald-500\"\n    }, null, 8 /* PROPS */, [\"icon\", \"number\", \"label\"]), _createVNode($setup[\"CardWidget\"], {\n      icon: $setup.mdiRobot,\n      label: 'Job Chatbot Config',\n      trend: $setup.jobChatbotConfigStatus,\n      \"trend-type\": $setup.jobChatbotConfigStatus === 'Setup' ? 'up' : 'alert',\n      color: \"text-blue-500\",\n      onConfigClick: _cache[1] || (_cache[1] = $event => $setup.handleConfigClick('job'))\n    }, null, 8 /* PROPS */, [\"icon\", \"trend\", \"trend-type\"]), _createVNode($setup[\"CardWidget\"], {\n      icon: $setup.mdiOfficeBuilding,\n      label: 'Organization Chatbot Config',\n      trend: $setup.orgChatbotConfigStatus,\n      \"trend-type\": $setup.orgChatbotConfigStatus === 'Setup' ? 'up' : 'alert',\n      color: \"text-purple-500\",\n      onConfigClick: _cache[2] || (_cache[2] = $event => $setup.handleConfigClick('org'))\n    }, null, 8 /* PROPS */, [\"icon\", \"trend\", \"trend-type\"])]), _createVNode($setup[\"TitleSubBar\"], {\n      icon: $setup.mdiMonitorCellphone,\n      title: `Applications for ${$setup.selectedJob?.name || 'All Jobs'}`\n    }, null, 8 /* PROPS */, [\"icon\", \"title\"]), _createVNode($setup[\"Notification\"], {\n      color: \"info\",\n      icon: $setup.mdiMonitorCellphone\n    }, {\n      default: _withCtx(() => [_hoisted_5]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"icon\"]), _createVNode($setup[\"CardComponent\"], {\n      icon: $setup.mdiMonitorCellphone,\n      title: \"Applicants\",\n      \"has-table\": \"\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"ClientsTable\"], {\n        checkable: false,\n        items: $setup.selectedJobApplications\n      }, null, 8 /* PROPS */, [\"items\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"icon\"])]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createVNode","$setup","titleStack","_hoisted_1","_hoisted_2","organizationJobs","length","_createElementBlock","selectedJob","$event","_Fragment","_renderList","job","key","id","value","_hoisted_3","_hoisted_4","icon","mdiAccountMultiple","number","selectedJobApplicationsCount","label","name","color","mdiRobot","trend","jobChatbotConfigStatus","onConfigClick","_cache","handleConfigClick","mdiOfficeBuilding","orgChatbotConfigStatus","mdiMonitorCellphone","title","checkable","items","selectedJobApplications"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/views/Home.vue"],"sourcesContent":["<script setup>\nimport { computed, ref, onMounted, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n  mdiAccountMultiple,\n  mdiCartOutline,\n  mdiChartTimelineVariant,\n  mdiMonitorCellphone,\n  mdiCog,\n  mdiRobot,\n  mdiOfficeBuilding,\n} from \"@mdi/js\";\nimport MainSection from \"@/components/MainSection.vue\";\nimport TitleBar from \"@/components/TitleBar.vue\";\nimport HeroBar from \"@/components/HeroBar.vue\";\nimport CardWidget from \"@/components/CardWidget.vue\";\nimport CardComponent from \"@/components/CardComponent.vue\";\nimport ClientsTable from \"@/components/ClientsTable.vue\";\nimport Notification from \"@/components/Notification.vue\";\nimport TitleSubBar from \"@/components/TitleSubBar.vue\";\n\nconst store = useStore();\n\nconst titleStack = computed(() => {\n  const orgName = store.getters.selectedOrganization?.name || \"\";\n  return [\"Admin\", \"Dashboard\", orgName];\n});\n\nconst selectedOrganization = computed(\n  () => store.getters.selectedOrganization || {}\n);\n\nconst organizationJobs = computed(() => selectedOrganization.value?.jobs || []);\n\nconst selectedJob = ref(null);\n\nconst selectedJobApplications = computed(() => {\n  if (!selectedJob.value) return [];\n  return selectedJob.value.applications || [];\n});\n\nconsole.log(selectedJobApplications.value);\n\nconst selectedJobApplicationsCount = computed(\n  () => selectedJobApplications.value.length\n);\n\n// Mock data for config status - in a real app, this would come from the store\nconst jobChatbotConfigStatus = ref(\"Not Setup\");\nconst orgChatbotConfigStatus = ref(\"Setup\");\n\n// Function to handle gear icon click\nconst handleConfigClick = (type) => {\n  // For now, just navigate to \"#\"\n  window.location.href = \"#\";\n};\n\n// Initialize data\nonMounted(() => {\n  // Make sure organizations are initialized\n  if (!store.state.userOrganizations.length) {\n    store.dispatch(\"initializeOrganizations\");\n  }\n  // Set first job as default when component mounts or organization changes\n  if (organizationJobs.value.length > 0) {\n    selectedJob.value = organizationJobs.value[0];\n  }\n});\n\n// Watch for organization changes to update selected job\nwatch(\n  () => selectedOrganization.value,\n  (newOrg) => {\n    if (newOrg?.jobs?.length > 0) {\n      selectedJob.value = newOrg.jobs[0];\n    } else {\n      selectedJob.value = null;\n    }\n  }\n);\n</script>\n\n<template>\n  <title-bar :title-stack=\"titleStack\" />\n  <hero-bar>\n    <div class=\"flex items-center space-x-4\">\n      <span>Job Posting Dashboard</span>\n      <select\n        v-if=\"organizationJobs.length\"\n        v-model=\"selectedJob\"\n        class=\"rounded-lg border-gray-300 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-300\"\n      >\n        <option v-for=\"job in organizationJobs\" :key=\"job.id\" :value=\"job\">\n          {{ job.id }}\n        </option>\n      </select>\n    </div>\n  </hero-bar>\n  <main-section>\n    <div class=\"grid grid-cols-1 gap-6 lg:grid-cols-3 mb-6\">\n      <card-widget\n        :icon=\"mdiAccountMultiple\"\n        :number=\"selectedJobApplicationsCount\"\n        :label=\"'Applications for ' + (selectedJob?.name || 'All Jobs')\"\n        color=\"text-emerald-500\"\n      />\n      <card-widget\n        :icon=\"mdiRobot\"\n        :label=\"'Job Chatbot Config'\"\n        :trend=\"jobChatbotConfigStatus\"\n        :trend-type=\"jobChatbotConfigStatus === 'Setup' ? 'up' : 'alert'\"\n        color=\"text-blue-500\"\n        @config-click=\"handleConfigClick('job')\"\n      />\n      <card-widget\n        :icon=\"mdiOfficeBuilding\"\n        :label=\"'Organization Chatbot Config'\"\n        :trend=\"orgChatbotConfigStatus\"\n        :trend-type=\"orgChatbotConfigStatus === 'Setup' ? 'up' : 'alert'\"\n        color=\"text-purple-500\"\n        @config-click=\"handleConfigClick('org')\"\n      />\n    </div>\n\n    <title-sub-bar\n      :icon=\"mdiMonitorCellphone\"\n      :title=\"`Applications for ${selectedJob?.name || 'All Jobs'}`\"\n    />\n\n    <notification color=\"info\" :icon=\"mdiMonitorCellphone\">\n      Click on applicants to view the interview prep doc or the analytics sheet.\n    </notification>\n\n    <card-component :icon=\"mdiMonitorCellphone\" title=\"Applicants\" has-table>\n      <clients-table :checkable=\"false\" :items=\"selectedJobApplications\" />\n    </card-component>\n  </main-section>\n</template>\n"],"mappings":";;EAqFSA,KAAK,EAAC;AAA6B;gCACtCC,mBAAA,CAAkC,cAA5B,uBAAqB;;;EAaxBD,KAAK,EAAC;AAA4C;iDA8BA,8EAEvD;;6DAhDFE,YAAA,CAAuCC,MAAA;IAA3B,aAAW,EAAEA,MAAA,CAAAC;EAAU,0CACnCF,YAAA,CAaWC,MAAA;sBAZT,MAWM,CAXNF,mBAAA,CAWM,OAXNI,UAWM,GAVJC,UAAkC,EAE1BH,MAAA,CAAAI,gBAAgB,CAACC,MAAM,G,+BAD/BC,mBAAA,CAQS;;iEANEN,MAAA,CAAAO,WAAW,GAAAC,MAAA;MACpBX,KAAK,EAAC;2BAENS,mBAAA,CAESG,SAAA,QAAAC,WAAA,CAFaV,MAAA,CAAAI,gBAAgB,EAAvBO,GAAG;2BAAlBL,mBAAA,CAES;QAFgCM,GAAG,EAAED,GAAG,CAACE,EAAE;QAAGC,KAAK,EAAEH;0BACzDA,GAAG,CAACE,EAAE,wBAAAE,UAAA;8EAJFf,MAAA,CAAAO,WAAW,E;;MAS1BR,YAAA,CAsCeC,MAAA;sBArCb,MAuBM,CAvBNF,mBAAA,CAuBM,OAvBNkB,UAuBM,GAtBJjB,YAAA,CAKEC,MAAA;MAJCiB,IAAI,EAAEjB,MAAA,CAAAkB,kBAAkB;MACxBC,MAAM,EAAEnB,MAAA,CAAAoB,4BAA4B;MACpCC,KAAK,yBAAyBrB,MAAA,CAAAO,WAAW,EAAEe,IAAI;MAChDC,KAAK,EAAC;0DAERxB,YAAA,CAOEC,MAAA;MANCiB,IAAI,EAAEjB,MAAA,CAAAwB,QAAQ;MACdH,KAAK,EAAE,oBAAoB;MAC3BI,KAAK,EAAEzB,MAAA,CAAA0B,sBAAsB;MAC7B,YAAU,EAAE1B,MAAA,CAAA0B,sBAAsB;MACnCH,KAAK,EAAC,eAAe;MACpBI,aAAY,EAAAC,MAAA,QAAAA,MAAA,MAAApB,MAAA,IAAER,MAAA,CAAA6B,iBAAiB;8DAElC9B,YAAA,CAOEC,MAAA;MANCiB,IAAI,EAAEjB,MAAA,CAAA8B,iBAAiB;MACvBT,KAAK,EAAE,6BAA6B;MACpCI,KAAK,EAAEzB,MAAA,CAAA+B,sBAAsB;MAC7B,YAAU,EAAE/B,MAAA,CAAA+B,sBAAsB;MACnCR,KAAK,EAAC,iBAAiB;MACtBI,aAAY,EAAAC,MAAA,QAAAA,MAAA,MAAApB,MAAA,IAAER,MAAA,CAAA6B,iBAAiB;gEAIpC9B,YAAA,CAGEC,MAAA;MAFCiB,IAAI,EAAEjB,MAAA,CAAAgC,mBAAmB;MACzBC,KAAK,sBAAsBjC,MAAA,CAAAO,WAAW,EAAEe,IAAI;gDAG/CvB,YAAA,CAEeC,MAAA;MAFDuB,KAAK,EAAC,MAAM;MAAEN,IAAI,EAAEjB,MAAA,CAAAgC;;wBAAqB,MAEvD,C;;iCAEAjC,YAAA,CAEiBC,MAAA;MAFAiB,IAAI,EAAEjB,MAAA,CAAAgC,mBAAmB;MAAEC,KAAK,EAAC,YAAY;MAAC,WAAS,EAAT;;wBAC7D,MAAqE,CAArElC,YAAA,CAAqEC,MAAA;QAArDkC,SAAS,EAAE,KAAK;QAAGC,KAAK,EAAEnC,MAAA,CAAAoC","ignoreList":[]},"metadata":{},"sourceType":"module"}