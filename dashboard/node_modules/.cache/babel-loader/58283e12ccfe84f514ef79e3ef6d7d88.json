{"ast":null,"code":"import { computed, ref, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { mdiAccountMultiple, mdiCartOutline, mdiChartTimelineVariant, mdiFinance, mdiMonitorCellphone, mdiReload, mdiChartPie } from \"@mdi/js\";\nimport * as chartConfig from \"@/components/Charts/chart.config.js\";\nimport LineChart from \"@/components/Charts/LineChart.vue\";\nimport MainSection from \"@/components/MainSection.vue\";\nimport TitleBar from \"@/components/TitleBar.vue\";\nimport HeroBar from \"@/components/HeroBar.vue\";\nimport CardWidget from \"@/components/CardWidget.vue\";\nimport CardComponent from \"@/components/CardComponent.vue\";\nimport ClientsTable from \"@/components/ClientsTable.vue\";\nimport Notification from \"@/components/Notification.vue\";\nimport CardTransactionBar from \"@/components/CardTransactionBar.vue\";\nimport CardClientBar from \"@/components/CardClientBar.vue\";\nimport TitleSubBar from \"@/components/TitleSubBar.vue\";\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const store = useStore();\n    const titleStack = computed(() => {\n      const orgName = store.getters.selectedOrganization?.name || \"\";\n      return [\"Admin\", \"Dashboard\", orgName];\n    });\n    const clientBarItems = computed(() => store.state.clients.slice(0, 3));\n    const transactionBarItems = computed(() => store.state.history.slice(0, 3));\n    const chartData = ref(null);\n    const fillChartData = () => {\n      chartData.value = chartConfig.sampleChartData();\n    };\n    const selectedOrganization = computed(() => store.getters.selectedOrganization);\n    const selectedOrganizationName = computed(() => selectedOrganization.value.name);\n    const selectedOrganizationApplications = computed(() => selectedOrganization.value.applications);\n    onMounted(() => {\n      fillChartData();\n    });\n    const __returned__ = {\n      store,\n      titleStack,\n      clientBarItems,\n      transactionBarItems,\n      chartData,\n      fillChartData,\n      selectedOrganization,\n      selectedOrganizationName,\n      selectedOrganizationApplications,\n      computed,\n      ref,\n      onMounted,\n      useStore,\n      mdiAccountMultiple,\n      mdiCartOutline,\n      mdiChartTimelineVariant,\n      mdiFinance,\n      mdiMonitorCellphone,\n      mdiReload,\n      mdiChartPie,\n      chartConfig,\n      LineChart,\n      MainSection,\n      TitleBar,\n      HeroBar,\n      CardWidget,\n      CardComponent,\n      ClientsTable,\n      Notification,\n      CardTransactionBar,\n      CardClientBar,\n      TitleSubBar\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,EAAEC,GAAG,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SACEC,kBAAkB,EAClBC,cAAc,EACdC,uBAAuB,EACvBC,UAAU,EACVC,mBAAmB,EACnBC,SAAS,EACTC,WAAW,QACN,SAAS;AAChB,OAAO,KAAKC,WAAW,MAAM,qCAAqC;AAClE,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,kBAAkB,MAAM,qCAAqC;AACpE,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,WAAW,MAAM,8BAA8B;;;;;;IAEtD,MAAMC,KAAK,GAAGpB,QAAQ,CAAC,CAAC;IAExB,MAAMqB,UAAU,GAAGxB,QAAQ,CAAC,MAAM;MAChC,MAAMyB,OAAO,GAAGF,KAAK,CAACG,OAAO,CAACC,oBAAoB,EAAEC,IAAI,IAAI,EAAE;MAC9D,OAAO,CAAC,OAAO,EAAE,WAAW,EAAEH,OAAO,CAAC;IACxC,CAAC,CAAC;IAEF,MAAMI,cAAc,GAAG7B,QAAQ,CAAC,MAAMuB,KAAK,CAACO,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAEtE,MAAMC,mBAAmB,GAAGjC,QAAQ,CAAC,MAAMuB,KAAK,CAACO,KAAK,CAACI,OAAO,CAACF,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE3E,MAAMG,SAAS,GAAGlC,GAAG,CAAC,IAAI,CAAC;IAE3B,MAAMmC,aAAa,GAAGA,MAAM;MAC1BD,SAAS,CAACE,KAAK,GAAG1B,WAAW,CAAC2B,eAAe,CAAC,CAAC;IACjD,CAAC;IAED,MAAMX,oBAAoB,GAAG3B,QAAQ,CAAC,MAAMuB,KAAK,CAACG,OAAO,CAACC,oBAAoB,CAAC;IAC/E,MAAMY,wBAAwB,GAAGvC,QAAQ,CACvC,MAAM2B,oBAAoB,CAACU,KAAK,CAACT,IACnC,CAAC;IACD,MAAMY,gCAAgC,GAAGxC,QAAQ,CAC/C,MAAM2B,oBAAoB,CAACU,KAAK,CAACI,YACnC,CAAC;IAEDvC,SAAS,CAAC,MAAM;MACdkC,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC","names":["computed","ref","onMounted","useStore","mdiAccountMultiple","mdiCartOutline","mdiChartTimelineVariant","mdiFinance","mdiMonitorCellphone","mdiReload","mdiChartPie","chartConfig","LineChart","MainSection","TitleBar","HeroBar","CardWidget","CardComponent","ClientsTable","Notification","CardTransactionBar","CardClientBar","TitleSubBar","store","titleStack","orgName","getters","selectedOrganization","name","clientBarItems","state","clients","slice","transactionBarItems","history","chartData","fillChartData","value","sampleChartData","selectedOrganizationName","selectedOrganizationApplications","applications"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/views/Home.vue"],"sourcesContent":["<script setup>\nimport { computed, ref, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n  mdiAccountMultiple,\n  mdiCartOutline,\n  mdiChartTimelineVariant,\n  mdiFinance,\n  mdiMonitorCellphone,\n  mdiReload,\n  mdiChartPie,\n} from \"@mdi/js\";\nimport * as chartConfig from \"@/components/Charts/chart.config.js\";\nimport LineChart from \"@/components/Charts/LineChart.vue\";\nimport MainSection from \"@/components/MainSection.vue\";\nimport TitleBar from \"@/components/TitleBar.vue\";\nimport HeroBar from \"@/components/HeroBar.vue\";\nimport CardWidget from \"@/components/CardWidget.vue\";\nimport CardComponent from \"@/components/CardComponent.vue\";\nimport ClientsTable from \"@/components/ClientsTable.vue\";\nimport Notification from \"@/components/Notification.vue\";\nimport CardTransactionBar from \"@/components/CardTransactionBar.vue\";\nimport CardClientBar from \"@/components/CardClientBar.vue\";\nimport TitleSubBar from \"@/components/TitleSubBar.vue\";\n\nconst store = useStore();\n\nconst titleStack = computed(() => {\n  const orgName = store.getters.selectedOrganization?.name || \"\";\n  return [\"Admin\", \"Dashboard\", orgName];\n});\n\nconst clientBarItems = computed(() => store.state.clients.slice(0, 3));\n\nconst transactionBarItems = computed(() => store.state.history.slice(0, 3));\n\nconst chartData = ref(null);\n\nconst fillChartData = () => {\n  chartData.value = chartConfig.sampleChartData();\n};\n\nconst selectedOrganization = computed(() => store.getters.selectedOrganization);\nconst selectedOrganizationName = computed(\n  () => selectedOrganization.value.name\n);\nconst selectedOrganizationApplications = computed(\n  () => selectedOrganization.value.applications\n);\n\nonMounted(() => {\n  fillChartData();\n});\n</script>\n\n<!-- to-do make the card widgets dynamic -->\n\n<template>\n  <title-bar :title-stack=\"titleStack\" />\n  <hero-bar>Dashboard</hero-bar>\n  <main-section>\n    <div class=\"grid grid-cols-1 gap-6 lg:grid-cols-3 mb-6\">\n      <card-widget\n        trend=\"12%\"\n        trend-type=\"up\"\n        color=\"text-emerald-500\"\n        :icon=\"mdiAccountMultiple\"\n        :number=\"selectedOrganizationApplications.length\"\n        label=\"Applications\"\n      />\n      <card-widget\n        trend=\"12%\"\n        trend-type=\"down\"\n        color=\"text-blue-500\"\n        :icon=\"mdiCartOutline\"\n        :number=\"7770\"\n        prefix=\"$\"\n        label=\"Sales\"\n      />\n      <card-widget\n        trend=\"Overflow\"\n        trend-type=\"alert\"\n        color=\"text-red-500\"\n        :icon=\"mdiChartTimelineVariant\"\n        :number=\"256\"\n        suffix=\"%\"\n        label=\"Performance\"\n      />\n    </div>\n\n    <div class=\"grid grid-cols-1 xl:grid-cols-2 gap-6 mb-6\">\n      <div class=\"flex flex-col justify-between\">\n        <card-transaction-bar\n          v-for=\"(transaction, index) in transactionBarItems\"\n          :key=\"index\"\n          :amount=\"transaction.amount\"\n          :date=\"transaction.date\"\n          :business=\"transaction.business\"\n          :type=\"transaction.type\"\n          :name=\"transaction.name\"\n          :account=\"transaction.account\"\n        />\n      </div>\n      <div class=\"flex flex-col justify-between\">\n        <card-client-bar\n          v-for=\"client in clientBarItems\"\n          :key=\"client.id\"\n          :name=\"client.name\"\n          :login=\"client.login\"\n          :date=\"client.created\"\n          :progress=\"client.progress\"\n        />\n      </div>\n    </div>\n\n    <title-sub-bar :icon=\"mdiChartPie\" title=\"Trends overview\" />\n\n    <card-component\n      title=\"Performance\"\n      :icon=\"mdiFinance\"\n      :header-icon=\"mdiReload\"\n      class=\"mb-6\"\n      @header-icon-click=\"fillChartData\"\n    >\n      <div v-if=\"chartData\">\n        <line-chart :data=\"chartData\" class=\"h-96\" />\n      </div>\n    </card-component>\n\n    <title-sub-bar\n      :icon=\"mdiAccountMultiple\"\n      :title=\"`Applications for ${selectedOrganizationName}`\"\n    />\n\n    <notification color=\"info\" :icon=\"mdiMonitorCellphone\">\n      Click on applicants to view the interview prep doc or the analytics sheet.\n    </notification>\n\n    <card-component :icon=\"mdiMonitorCellphone\" title=\"Applicants\" has-table>\n      <clients-table :checkable=\"false\" />\n    </card-component>\n  </main-section>\n</template>\n"]},"metadata":{},"sourceType":"module"}