{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.string.small.js\";\nimport { computed } from 'vue';\nimport { getButtonColor } from '@/colors.js';\nimport Icon from '@/components/Icon.vue';\nexport default {\n  props: {\n    label: {\n      type: [String, Number],\n      default: null\n    },\n    icon: {\n      type: String,\n      default: null\n    },\n    href: {\n      type: String,\n      default: null\n    },\n    target: {\n      type: String,\n      default: null\n    },\n    to: {\n      type: [String, Object],\n      default: null\n    },\n    type: {\n      type: String,\n      default: null\n    },\n    color: {\n      type: String,\n      default: 'white'\n    },\n    as: {\n      type: String,\n      default: null\n    },\n    small: Boolean,\n    outline: Boolean,\n    active: Boolean,\n    disabled: Boolean\n  },\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var props = __props;\n    var is = computed(function () {\n      if (props.as) {\n        return props.as;\n      }\n\n      if (props.to) {\n        return 'router-link';\n      }\n\n      if (props.href) {\n        return 'a';\n      }\n\n      return 'button';\n    });\n    var computedType = computed(function () {\n      if (is.value === 'button') {\n        var _props$type;\n\n        return (_props$type = props.type) !== null && _props$type !== void 0 ? _props$type : 'button';\n      }\n\n      return null;\n    });\n    var labelClass = computed(function () {\n      return props.small && props.icon ? 'px-1' : 'px-2';\n    });\n    var componentClass = computed(function () {\n      var base = ['inline-flex', 'cursor-pointer', 'justify-center', 'items-center', 'whitespace-nowrap', 'focus:outline-none', 'transition-colors', 'focus:ring', 'duration-150', 'border', 'rounded', props.active ? 'ring ring-black dark:ring-white' : 'ring-blue-700', props.small ? 'p-1' : 'p-2', getButtonColor(props.color, props.outline, !props.disabled)];\n\n      if (props.disabled) {\n        base.push('cursor-not-allowed', props.outline ? 'opacity-50' : 'opacity-70');\n      }\n\n      return base;\n    });\n    var __returned__ = {\n      props: props,\n      is: is,\n      computedType: computedType,\n      labelClass: labelClass,\n      componentClass: componentClass,\n      computed: computed,\n      getButtonColor: getButtonColor,\n      Icon: Icon\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";;AACA,SAASA,QAAT,QAAyB,KAAzB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,QAAMC,EAAE,GAAGH,QAAQ,CAAC,YAAM;AACxB,UAAII,KAAK,CAACC,EAAV,EAAc;AACZ,eAAOD,KAAK,CAACC,EAAb;AACD;;AAED,UAAID,KAAK,CAACE,EAAV,EAAc;AACZ,eAAO,aAAP;AACD;;AAED,UAAIF,KAAK,CAACG,IAAV,EAAgB;AACd,eAAO,GAAP;AACD;;AAED,aAAO,QAAP;AACD,KAdkB,CAAnB;AAgBA,QAAMC,YAAY,GAAGR,QAAQ,CAAC,YAAM;AAClC,UAAIG,EAAE,CAACM,KAAH,KAAa,QAAjB,EAA2B;AAAA;;AACzB,8BAAOL,KAAK,CAACM,IAAb,qDAAqB,QAArB;AACD;;AAED,aAAO,IAAP;AACD,KAN4B,CAA7B;AAQA,QAAMC,UAAU,GAAGX,QAAQ,CAAC;AAAA,aAAMI,KAAK,CAACQ,KAAN,IAAeR,KAAK,CAACS,IAArB,GAA4B,MAA5B,GAAqC,MAA3C;AAAA,KAAD,CAA3B;AAEA,QAAMC,cAAc,GAAGd,QAAQ,CAAC,YAAM;AACpC,UAAMe,IAAI,GAAG,CACX,aADW,EAEX,gBAFW,EAGX,gBAHW,EAIX,cAJW,EAKX,mBALW,EAMX,oBANW,EAOX,mBAPW,EAQX,YARW,EASX,cATW,EAUX,QAVW,EAWX,SAXW,EAYXX,KAAK,CAACY,MAAN,GAAe,iCAAf,GAAmD,eAZxC,EAaXZ,KAAK,CAACQ,KAAN,GAAc,KAAd,GAAsB,KAbX,EAcXX,cAAc,CAACG,KAAK,CAACa,KAAP,EAAcb,KAAK,CAACc,OAApB,EAA6B,CAACd,KAAK,CAACe,QAApC,CAdH,CAAb;;AAiBA,UAAIf,KAAK,CAACe,QAAV,EAAoB;AAClBJ,YAAI,CAACK,IAAL,CAAU,oBAAV,EAAgChB,KAAK,CAACc,OAAN,GAAgB,YAAhB,GAA+B,YAA/D;AACD;;AAED,aAAOH,IAAP;AACD,KAvB8B,CAA/B","names":["computed","getButtonColor","Icon","is","props","as","to","href","computedType","value","type","labelClass","small","icon","componentClass","base","active","color","outline","disabled","push"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/JbButton.vue"],"sourcesContent":["<script setup>\nimport { computed } from 'vue'\nimport { getButtonColor } from '@/colors.js'\nimport Icon from '@/components/Icon.vue'\n\nconst props = defineProps({\n  label: {\n    type: [String, Number],\n    default: null\n  },\n  icon: {\n    type: String,\n    default: null\n  },\n  href: {\n    type: String,\n    default: null\n  },\n  target: {\n    type: String,\n    default: null\n  },\n  to: {\n    type: [String, Object],\n    default: null\n  },\n  type: {\n    type: String,\n    default: null\n  },\n  color: {\n    type: String,\n    default: 'white'\n  },\n  as: {\n    type: String,\n    default: null\n  },\n  small: Boolean,\n  outline: Boolean,\n  active: Boolean,\n  disabled: Boolean\n})\n\nconst is = computed(() => {\n  if (props.as) {\n    return props.as\n  }\n\n  if (props.to) {\n    return 'router-link'\n  }\n\n  if (props.href) {\n    return 'a'\n  }\n\n  return 'button'\n})\n\nconst computedType = computed(() => {\n  if (is.value === 'button') {\n    return props.type ?? 'button'\n  }\n\n  return null\n})\n\nconst labelClass = computed(() => props.small && props.icon ? 'px-1' : 'px-2')\n\nconst componentClass = computed(() => {\n  const base = [\n    'inline-flex',\n    'cursor-pointer',\n    'justify-center',\n    'items-center',\n    'whitespace-nowrap',\n    'focus:outline-none',\n    'transition-colors',\n    'focus:ring',\n    'duration-150',\n    'border',\n    'rounded',\n    props.active ? 'ring ring-black dark:ring-white' : 'ring-blue-700',\n    props.small ? 'p-1' : 'p-2',\n    getButtonColor(props.color, props.outline, !props.disabled)\n  ]\n\n  if (props.disabled) {\n    base.push('cursor-not-allowed', props.outline ? 'opacity-50' : 'opacity-70')\n  }\n\n  return base\n})\n</script>\n\n<template>\n  <component\n    :is=\"is\"\n    :class=\"componentClass\"\n    :href=\"href\"\n    :type=\"computedType\"\n    :to=\"to\"\n    :target=\"target\"\n    :disabled=\"disabled\"\n  >\n    <icon\n      v-if=\"icon\"\n      :path=\"icon\"\n    />\n    <span\n      v-if=\"label\"\n      :class=\"labelClass\"\n    >{{ label }}</span>\n  </component>\n</template>\n"]},"metadata":{},"sourceType":"module"}