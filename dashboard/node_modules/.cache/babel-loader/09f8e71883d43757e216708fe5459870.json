{"ast":null,"code":"import { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { sectionBgLogin, sectionBgLoginDark, sectionBgError, sectionBgErrorDark } from '@/colors';\nimport MainSection from '@/components/MainSection.vue';\nexport default {\n  props: {\n    bg: {\n      type: String,\n      required: true,\n      validator: value => ['login', 'error'].includes(value)\n    }\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const store = useStore();\n    const darkMode = computed(() => store.state.darkMode);\n    const colorClass = computed(() => {\n      switch (props.bg) {\n        case 'login':\n          return darkMode.value ? sectionBgLoginDark : sectionBgLogin;\n        case 'error':\n          return darkMode.value ? sectionBgErrorDark : sectionBgError;\n      }\n      return '';\n    });\n    const __returned__ = {\n      props,\n      store,\n      darkMode,\n      colorClass,\n      computed,\n      useStore,\n      sectionBgLogin,\n      sectionBgLoginDark,\n      sectionBgError,\n      sectionBgErrorDark,\n      MainSection\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","useStore","sectionBgLogin","sectionBgLoginDark","sectionBgError","sectionBgErrorDark","MainSection","store","darkMode","state","colorClass","props","bg","value"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/FullScreenSection.vue"],"sourcesContent":["<script setup>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { sectionBgLogin, sectionBgLoginDark, sectionBgError, sectionBgErrorDark } from '@/colors'\nimport MainSection from '@/components/MainSection.vue'\n\nconst props = defineProps({\n  bg: {\n    type: String,\n    required: true,\n    validator: value => ['login', 'error'].includes(value)\n  }\n})\n\nconst store = useStore()\n\nconst darkMode = computed(() => store.state.darkMode)\n\nconst colorClass = computed(() => {\n  switch (props.bg) {\n    case 'login':\n      return darkMode.value ? sectionBgLoginDark : sectionBgLogin\n    case 'error':\n      return darkMode.value ? sectionBgErrorDark : sectionBgError\n  }\n\n  return ''\n})\n</script>\n\n<template>\n  <main-section\n    class=\"flex h-screen items-center justify-center\"\n    :class=\"colorClass\"\n  >\n    <slot\n      card-class=\"w-11/12 md:w-7/12 lg:w-6/12 xl:w-4/12 shadow-2xl\"\n      card-rounded=\"rounded-lg\"\n    />\n  </main-section>\n</template>\n"],"mappings":"AACA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,cAAc,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,kBAAkB,QAAQ,UAAU;AACjG,OAAOC,WAAW,MAAM,8BAA8B;;;;;;;;;;;;;;IAUtD,MAAMC,KAAK,GAAGN,QAAQ,CAAC,CAAC;IAExB,MAAMO,QAAQ,GAAGR,QAAQ,CAAC,MAAMO,KAAK,CAACE,KAAK,CAACD,QAAQ,CAAC;IAErD,MAAME,UAAU,GAAGV,QAAQ,CAAC,MAAM;MAChC,QAAQW,KAAK,CAACC,EAAE;QACd,KAAK,OAAO;UACV,OAAOJ,QAAQ,CAACK,KAAK,GAAGV,kBAAkB,GAAGD,cAAc;QAC7D,KAAK,OAAO;UACV,OAAOM,QAAQ,CAACK,KAAK,GAAGR,kBAAkB,GAAGD,cAAc;MAC/D;MAEA,OAAO,EAAE;IACX,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}