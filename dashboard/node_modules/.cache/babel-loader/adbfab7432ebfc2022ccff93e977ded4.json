{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { mdiEye, mdiTrashCan } from \"@mdi/js\";\nimport Level from \"@/components/Level.vue\";\nimport JbButtons from \"@/components/JbButtons.vue\";\nimport JbButton from \"@/components/JbButton.vue\";\nimport UserAvatar from \"@/components/UserAvatar.vue\";\nexport default {\n  props: {\n    items: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var props = __props;\n    var store = useStore();\n    var tableTrStyle = computed(function () {\n      return store.state.tableTrStyle;\n    });\n    var tableTrOddStyle = computed(function () {\n      return store.state.tableTrOddStyle;\n    });\n    var formatPhoneNumber = function formatPhoneNumber(phoneNumber) {\n      if (!phoneNumber) return \"\";\n      // Remove all non-digits\n      var cleaned = phoneNumber.replace(/\\D/g, \"\");\n      // Format as (XXX) XXX-XXXX\n      var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n      if (match) {\n        return \"(\".concat(match[1], \") \").concat(match[2], \"-\").concat(match[3]);\n      }\n      return phoneNumber;\n    };\n    var perPage = ref(10);\n    var currentPage = ref(0);\n    var itemsPaginated = computed(function () {\n      var _props$items;\n      return ((_props$items = props.items) === null || _props$items === void 0 ? void 0 : _props$items.slice(perPage.value * currentPage.value, perPage.value * (currentPage.value + 1))) || [];\n    });\n    var numPages = computed(function () {\n      var _props$items2;\n      return Math.ceil((((_props$items2 = props.items) === null || _props$items2 === void 0 ? void 0 : _props$items2.length) || 0) / perPage.value);\n    });\n    var currentPageHuman = computed(function () {\n      return currentPage.value + 1;\n    });\n    var pagesList = computed(function () {\n      var pagesList = [];\n      for (var i = 0; i < numPages.value; i++) {\n        pagesList.push(i);\n      }\n      return pagesList;\n    });\n    var __returned__ = {\n      props: props,\n      store: store,\n      tableTrStyle: tableTrStyle,\n      tableTrOddStyle: tableTrOddStyle,\n      formatPhoneNumber: formatPhoneNumber,\n      perPage: perPage,\n      currentPage: currentPage,\n      itemsPaginated: itemsPaginated,\n      numPages: numPages,\n      currentPageHuman: currentPageHuman,\n      pagesList: pagesList,\n      computed: computed,\n      ref: ref,\n      useStore: useStore,\n      mdiEye: mdiEye,\n      mdiTrashCan: mdiTrashCan,\n      Level: Level,\n      JbButtons: JbButtons,\n      JbButton: JbButton,\n      UserAvatar: UserAvatar\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","ref","useStore","mdiEye","mdiTrashCan","Level","JbButtons","JbButton","UserAvatar","store","tableTrStyle","state","tableTrOddStyle","formatPhoneNumber","phoneNumber","cleaned","replace","match","concat","perPage","currentPage","itemsPaginated","_props$items","props","items","slice","value","numPages","_props$items2","Math","ceil","length","currentPageHuman","pagesList","i","push"],"sources":["/Users/jasongreenberg/Desktop/testdashboard/dashboardtest/dashboard/src/components/ClientsTable.vue"],"sourcesContent":["<script setup>\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { mdiEye, mdiTrashCan } from \"@mdi/js\";\nimport Level from \"@/components/Level.vue\";\nimport JbButtons from \"@/components/JbButtons.vue\";\nimport JbButton from \"@/components/JbButton.vue\";\nimport UserAvatar from \"@/components/UserAvatar.vue\";\n\nconst props = defineProps({\n  items: {\n    type: Array,\n    default: () => [],\n  },\n});\n\nconst store = useStore();\n\nconst tableTrStyle = computed(() => store.state.tableTrStyle);\nconst tableTrOddStyle = computed(() => store.state.tableTrOddStyle);\n\nconst formatPhoneNumber = (phoneNumber) => {\n  if (!phoneNumber) return \"\";\n  // Remove all non-digits\n  const cleaned = phoneNumber.replace(/\\D/g, \"\");\n  // Format as (XXX) XXX-XXXX\n  const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n  if (match) {\n    return `(${match[1]}) ${match[2]}-${match[3]}`;\n  }\n  return phoneNumber;\n};\n\nconst perPage = ref(10);\nconst currentPage = ref(0);\n\nconst itemsPaginated = computed(\n  () =>\n    props.items?.slice(\n      perPage.value * currentPage.value,\n      perPage.value * (currentPage.value + 1)\n    ) || []\n);\n\nconst numPages = computed(() =>\n  Math.ceil((props.items?.length || 0) / perPage.value)\n);\n\nconst currentPageHuman = computed(() => currentPage.value + 1);\n\nconst pagesList = computed(() => {\n  const pagesList = [];\n  for (let i = 0; i < numPages.value; i++) {\n    pagesList.push(i);\n  }\n  return pagesList;\n});\n</script>\n\n<template>\n  <div class=\"w-full\">\n    <table class=\"w-full\">\n      <thead>\n        <tr>\n          <th />\n          <th>Name</th>\n          <th>Email</th>\n          <th>Phone</th>\n          <th>Status</th>\n          <th>Applied</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          v-for=\"(application, index) in itemsPaginated\"\n          :key=\"application.id\"\n          :class=\"[tableTrStyle, index % 2 === 0 ? tableTrOddStyle : '']\"\n        >\n          <td class=\"image-cell\">\n            <user-avatar :username=\"application.name\" class=\"image\" />\n          </td>\n          <td data-label=\"Name\">\n            {{ application.name }}\n          </td>\n          <td data-label=\"Email\">\n            {{ application.email }}\n          </td>\n          <td data-label=\"Phone\">\n            {{ formatPhoneNumber(application.phone) }}\n          </td>\n          <td data-label=\"Status\">\n            <span\n              :class=\"{\n                'px-2 py-1 rounded-full text-xs': true,\n                'bg-blue-100 text-blue-800': application.status === 'Applied',\n                'bg-yellow-100 text-yellow-800':\n                  application.status === 'Reviewed',\n                'bg-green-100 text-green-800':\n                  application.status === 'Acted On',\n              }\"\n            >\n              {{ application.status }}\n            </span>\n          </td>\n          <td data-label=\"Applied\">\n            <small class=\"text-gray-500 dark:text-gray-400\">\n              {{ application.applied_date }}\n            </small>\n          </td>\n          <td class=\"actions-cell\">\n            <jb-buttons type=\"justify-start lg:justify-end\" no-wrap>\n              <jb-button\n                :icon=\"mdiEye\"\n                small\n                class=\"text-blue-500\"\n                @click=\"$emit('view', application)\"\n              />\n              <jb-button\n                :icon=\"mdiTrashCan\"\n                small\n                class=\"text-red-500\"\n                @click=\"$emit('delete', application)\"\n              />\n            </jb-buttons>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div class=\"p-3 lg:px-6 border-t border-gray-100 dark:border-gray-800\">\n      <level>\n        <jb-buttons>\n          <jb-button\n            v-for=\"page in pagesList\"\n            :key=\"page\"\n            :active=\"page === currentPage\"\n            :label=\"page + 1\"\n            small\n            @click=\"currentPage = page\"\n          />\n        </jb-buttons>\n        <small>Page {{ currentPageHuman }} of {{ numPages }}</small>\n      </level>\n    </div>\n  </div>\n</template>\n"],"mappings":";;;;;;AACA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACnC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,MAAM,EAAEC,WAAW,QAAQ,SAAS;AAC7C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,UAAU,MAAM,6BAA6B;;;;;;;;;;;;;;IASpD,IAAMC,KAAK,GAAGP,QAAQ,CAAC,CAAC;IAExB,IAAMQ,YAAY,GAAGV,QAAQ,CAAC;MAAA,OAAMS,KAAK,CAACE,KAAK,CAACD,YAAY;IAAA,EAAC;IAC7D,IAAME,eAAe,GAAGZ,QAAQ,CAAC;MAAA,OAAMS,KAAK,CAACE,KAAK,CAACC,eAAe;IAAA,EAAC;IAEnE,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,WAAW,EAAK;MACzC,IAAI,CAACA,WAAW,EAAE,OAAO,EAAE;MAC3B;MACA,IAAMC,OAAO,GAAGD,WAAW,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;MAC9C;MACA,IAAMC,KAAK,GAAGF,OAAO,CAACE,KAAK,CAAC,yBAAyB,CAAC;MACtD,IAAIA,KAAK,EAAE;QACT,WAAAC,MAAA,CAAWD,KAAK,CAAC,CAAC,CAAC,QAAAC,MAAA,CAAKD,KAAK,CAAC,CAAC,CAAC,OAAAC,MAAA,CAAID,KAAK,CAAC,CAAC,CAAC;MAC9C;MACA,OAAOH,WAAW;IACpB,CAAC;IAED,IAAMK,OAAO,GAAGlB,GAAG,CAAC,EAAE,CAAC;IACvB,IAAMmB,WAAW,GAAGnB,GAAG,CAAC,CAAC,CAAC;IAE1B,IAAMoB,cAAc,GAAGrB,QAAQ,CAC7B;MAAA,IAAAsB,YAAA;MAAA,OACE,EAAAA,YAAA,GAAAC,KAAK,CAACC,KAAK,cAAAF,YAAA,uBAAXA,YAAA,CAAaG,KAAK,CAChBN,OAAO,CAACO,KAAK,GAAGN,WAAW,CAACM,KAAK,EACjCP,OAAO,CAACO,KAAK,IAAIN,WAAW,CAACM,KAAK,GAAG,CAAC,CACxC,CAAC,KAAI,EAAE;IAAA,CACX,CAAC;IAED,IAAMC,QAAQ,GAAG3B,QAAQ,CAAC;MAAA,IAAA4B,aAAA;MAAA,OACxBC,IAAI,CAACC,IAAI,CAAC,CAAC,EAAAF,aAAA,GAAAL,KAAK,CAACC,KAAK,cAAAI,aAAA,uBAAXA,aAAA,CAAaG,MAAM,KAAI,CAAC,IAAIZ,OAAO,CAACO,KAAK,CAAC;IAAA,CACvD,CAAC;IAED,IAAMM,gBAAgB,GAAGhC,QAAQ,CAAC;MAAA,OAAMoB,WAAW,CAACM,KAAK,GAAG,CAAC;IAAA,EAAC;IAE9D,IAAMO,SAAS,GAAGjC,QAAQ,CAAC,YAAM;MAC/B,IAAMiC,SAAS,GAAG,EAAE;MACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,CAACD,KAAK,EAAEQ,CAAC,EAAE,EAAE;QACvCD,SAAS,CAACE,IAAI,CAACD,CAAC,CAAC;MACnB;MACA,OAAOD,SAAS;IAClB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}