{"ast":null,"code":"import { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { mdiMenu } from \"@mdi/js\";\nimport AsideMenuList from \"@/components/AsideMenuList.vue\";\nimport NavBarItem from \"@/components/NavBarItem.vue\";\nimport Icon from \"@/components/Icon.vue\";\nexport default {\n  props: {\n    menu: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var store = useStore();\n    var asideStyle = computed(function () {\n      return store.state.asideStyle;\n    });\n    var asideBrandStyle = computed(function () {\n      return store.state.asideBrandStyle;\n    });\n    var asideMenuCloseLgStyle = computed(function () {\n      return store.state.asideMenuCloseLgStyle;\n    });\n    var asideMenuLabelStyle = computed(function () {\n      return store.state.asideMenuLabelStyle;\n    });\n    var isFullScreen = computed(function () {\n      return store.state.isFullScreen;\n    });\n    var isAsideMobileExpanded = computed(function () {\n      return store.state.isAsideMobileExpanded;\n    });\n    var isAsideLgActive = computed(function () {\n      return store.state.isAsideLgActive;\n    });\n\n    var asideLgClose = function asideLgClose() {\n      store.dispatch(\"asideLgToggle\", false);\n    };\n\n    var menuClick = function menuClick(event, item) {//\n    };\n\n    var __returned__ = {\n      store: store,\n      asideStyle: asideStyle,\n      asideBrandStyle: asideBrandStyle,\n      asideMenuCloseLgStyle: asideMenuCloseLgStyle,\n      asideMenuLabelStyle: asideMenuLabelStyle,\n      isFullScreen: isFullScreen,\n      isAsideMobileExpanded: isAsideMobileExpanded,\n      isAsideLgActive: isAsideLgActive,\n      asideLgClose: asideLgClose,\n      menuClick: menuClick,\n      computed: computed,\n      useStore: useStore,\n      mdiMenu: mdiMenu,\n      AsideMenuList: AsideMenuList,\n      NavBarItem: NavBarItem,\n      Icon: Icon\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AACA,SAASA,QAAT,QAAyB,KAAzB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;;;;;;;;;;;AASA,QAAMC,KAAK,GAAGL,QAAQ,EAAtB;AAEA,QAAMM,UAAU,GAAGP,QAAQ,CAAC;AAAA,aAAMM,KAAK,CAACE,KAAN,CAAYD,UAAlB;AAAA,KAAD,CAA3B;AAEA,QAAME,eAAe,GAAGT,QAAQ,CAAC;AAAA,aAAMM,KAAK,CAACE,KAAN,CAAYC,eAAlB;AAAA,KAAD,CAAhC;AAEA,QAAMC,qBAAqB,GAAGV,QAAQ,CAAC;AAAA,aAAMM,KAAK,CAACE,KAAN,CAAYE,qBAAlB;AAAA,KAAD,CAAtC;AAEA,QAAMC,mBAAmB,GAAGX,QAAQ,CAAC;AAAA,aAAMM,KAAK,CAACE,KAAN,CAAYG,mBAAlB;AAAA,KAAD,CAApC;AAEA,QAAMC,YAAY,GAAGZ,QAAQ,CAAC;AAAA,aAAMM,KAAK,CAACE,KAAN,CAAYI,YAAlB;AAAA,KAAD,CAA7B;AAEA,QAAMC,qBAAqB,GAAGb,QAAQ,CAAC;AAAA,aAAMM,KAAK,CAACE,KAAN,CAAYK,qBAAlB;AAAA,KAAD,CAAtC;AAEA,QAAMC,eAAe,GAAGd,QAAQ,CAAC;AAAA,aAAMM,KAAK,CAACE,KAAN,CAAYM,eAAlB;AAAA,KAAD,CAAhC;;AAEA,QAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBT,WAAK,CAACU,QAAN,CAAe,eAAf,EAAgC,KAAhC;AACD,KAFD;;AAIA,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,IAAR,EAAiB,CACjC;AACD,KAFD","names":["computed","useStore","mdiMenu","AsideMenuList","NavBarItem","Icon","store","asideStyle","state","asideBrandStyle","asideMenuCloseLgStyle","asideMenuLabelStyle","isFullScreen","isAsideMobileExpanded","isAsideLgActive","asideLgClose","dispatch","menuClick","event","item"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/AsideMenu.vue"],"sourcesContent":["<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { mdiMenu } from \"@mdi/js\";\nimport AsideMenuList from \"@/components/AsideMenuList.vue\";\nimport NavBarItem from \"@/components/NavBarItem.vue\";\nimport Icon from \"@/components/Icon.vue\";\n\ndefineProps({\n  menu: {\n    type: Array,\n    default: () => [],\n  },\n});\n\nconst store = useStore();\n\nconst asideStyle = computed(() => store.state.asideStyle);\n\nconst asideBrandStyle = computed(() => store.state.asideBrandStyle);\n\nconst asideMenuCloseLgStyle = computed(() => store.state.asideMenuCloseLgStyle);\n\nconst asideMenuLabelStyle = computed(() => store.state.asideMenuLabelStyle);\n\nconst isFullScreen = computed(() => store.state.isFullScreen);\n\nconst isAsideMobileExpanded = computed(() => store.state.isAsideMobileExpanded);\n\nconst isAsideLgActive = computed(() => store.state.isAsideLgActive);\n\nconst asideLgClose = () => {\n  store.dispatch(\"asideLgToggle\", false);\n};\n\nconst menuClick = (event, item) => {\n  //\n};\n</script>\n\n<template>\n  <aside\n    v-show=\"!isFullScreen\"\n    id=\"aside\"\n    class=\"w-60 fixed top-0 z-40 h-screen transition-position lg:left-0 dark:border-r dark:border-gray-800 dark:bg-gray-900/70 lg:dark:bg-gray-900 xl:dark:bg-gray-900/70\"\n    :class=\"[\n      asideStyle,\n      isAsideMobileExpanded ? 'left-0' : '-left-60',\n      isAsideLgActive ? 'block' : 'lg:hidden xl:block',\n    ]\"\n  >\n    <div\n      class=\"flex flex-row w-full flex-1 h-14 items-center dark:bg-transparent\"\n      :class=\"[asideBrandStyle]\"\n    >\n      <nav-bar-item\n        type=\"hidden lg:flex xl:hidden\"\n        :active-color=\"asideMenuCloseLgStyle\"\n        active\n        @click=\"asideLgClose\"\n      >\n        <icon :path=\"mdiMenu\" class=\"cursor-pointer\" size=\"24\" />\n      </nav-bar-item>\n      <div class=\"flex-1 px-3\">\n        <b>>Hireflow</b>\n      </div>\n    </div>\n    <div>\n      <template v-for=\"(menuGroup, index) in menu\">\n        <p\n          v-if=\"typeof menuGroup === 'string'\"\n          :key=\"`a-${index}`\"\n          class=\"p-3 text-xs uppercase\"\n          :class=\"[asideMenuLabelStyle]\"\n        >\n          {{ menuGroup }}\n        </p>\n        <aside-menu-list\n          v-else\n          :key=\"`b-${index}`\"\n          :menu=\"menuGroup\"\n          @menu-click=\"menuClick\"\n        />\n      </template>\n    </div>\n  </aside>\n</template>\n"]},"metadata":{},"sourceType":"module"}