{"ast":null,"code":"import { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { mdiForwardburger, mdiBackburger, mdiClose, mdiDotsVertical, mdiMenu, mdiAccount, mdiCogOutline, mdiEmail, mdiLogout, mdiBriefcase } from \"@mdi/js\";\nimport NavBarItem from \"@/components/NavBarItem.vue\";\nimport NavBarItemLabel from \"@/components/NavBarItemLabel.vue\";\nimport NavBarMenu from \"@/components/NavBarMenu.vue\";\nimport Divider from \"@/components/Divider.vue\";\nimport UserAvatar from \"@/components/UserAvatar.vue\";\nimport Icon from \"@/components/Icon.vue\";\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const store = useStore();\n    const lightBorderStyle = computed(() => store.state.lightBorderStyle);\n    const isNavBarVisible = computed(() => !store.state.isFullScreen);\n    const isAsideMobileExpanded = computed(() => store.state.isAsideMobileExpanded);\n    const isAsideCollapsed = computed(() => store.state.isAsideCollapsed);\n    const userName = computed(() => store.state.userName);\n    const menuToggleMobileIcon = computed(() => isAsideMobileExpanded.value ? mdiBackburger : mdiForwardburger);\n    const organizations = computed(() => store.state.userOrganizations);\n    const selectedOrganization = computed(() => store.getters.selectedOrganization);\n    const selectOrganization = org => {\n      store.commit(\"setSelectedOrganization\", {\n        id: org.id\n      });\n    };\n    const currentPlan = computed(() => selectedOrganization.value?.currentPlan);\n    const currentPlanColor = computed(() => {\n      if (currentPlan.value === \"Free\") return \"text-green-500 font-bold m-4\";\n      if (currentPlan.value === \"Pro\") return \"text-red-500 font-bold m-4\";\n      return \"text-gray-500\";\n    });\n    const menuToggleMobile = () => store.dispatch(\"asideMobileToggle\");\n    const isMenuNavBarActive = ref(false);\n    const menuNavBarToggleIcon = computed(() => isMenuNavBarActive.value ? mdiClose : mdiDotsVertical);\n    const menuNavBarToggle = () => {\n      isMenuNavBarActive.value = !isMenuNavBarActive.value;\n    };\n    const menuOpenLg = () => {\n      store.dispatch(\"asideLgToggle\", true);\n    };\n    const __returned__ = {\n      store,\n      lightBorderStyle,\n      isNavBarVisible,\n      isAsideMobileExpanded,\n      isAsideCollapsed,\n      userName,\n      menuToggleMobileIcon,\n      organizations,\n      selectedOrganization,\n      selectOrganization,\n      currentPlan,\n      currentPlanColor,\n      menuToggleMobile,\n      isMenuNavBarActive,\n      menuNavBarToggleIcon,\n      menuNavBarToggle,\n      menuOpenLg,\n      computed,\n      ref,\n      useStore,\n      mdiForwardburger,\n      mdiBackburger,\n      mdiClose,\n      mdiDotsVertical,\n      mdiMenu,\n      mdiAccount,\n      mdiCogOutline,\n      mdiEmail,\n      mdiLogout,\n      mdiBriefcase,\n      NavBarItem,\n      NavBarItemLabel,\n      NavBarMenu,\n      Divider,\n      UserAvatar,\n      Icon\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","ref","useStore","mdiForwardburger","mdiBackburger","mdiClose","mdiDotsVertical","mdiMenu","mdiAccount","mdiCogOutline","mdiEmail","mdiLogout","mdiBriefcase","NavBarItem","NavBarItemLabel","NavBarMenu","Divider","UserAvatar","Icon","store","lightBorderStyle","state","isNavBarVisible","isFullScreen","isAsideMobileExpanded","isAsideCollapsed","userName","menuToggleMobileIcon","value","organizations","userOrganizations","selectedOrganization","getters","selectOrganization","org","commit","id","currentPlan","currentPlanColor","menuToggleMobile","dispatch","isMenuNavBarActive","menuNavBarToggleIcon","menuNavBarToggle","menuOpenLg"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/NavBar.vue"],"sourcesContent":["<script setup>\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n  mdiForwardburger,\n  mdiBackburger,\n  mdiClose,\n  mdiDotsVertical,\n  mdiMenu,\n  mdiAccount,\n  mdiCogOutline,\n  mdiEmail,\n  mdiLogout,\n  mdiBriefcase,\n} from \"@mdi/js\";\nimport NavBarItem from \"@/components/NavBarItem.vue\";\nimport NavBarItemLabel from \"@/components/NavBarItemLabel.vue\";\nimport NavBarMenu from \"@/components/NavBarMenu.vue\";\nimport Divider from \"@/components/Divider.vue\";\nimport UserAvatar from \"@/components/UserAvatar.vue\";\nimport Icon from \"@/components/Icon.vue\";\n\nconst store = useStore();\n\nconst lightBorderStyle = computed(() => store.state.lightBorderStyle);\n\nconst isNavBarVisible = computed(() => !store.state.isFullScreen);\n\nconst isAsideMobileExpanded = computed(() => store.state.isAsideMobileExpanded);\n\nconst isAsideCollapsed = computed(() => store.state.isAsideCollapsed);\n\nconst userName = computed(() => store.state.userName);\n\nconst menuToggleMobileIcon = computed(() =>\n  isAsideMobileExpanded.value ? mdiBackburger : mdiForwardburger\n);\n\nconst organizations = computed(() => store.state.userOrganizations);\nconst selectedOrganization = computed(() => store.getters.selectedOrganization);\n\nconst selectOrganization = (org) => {\n  store.commit(\"setSelectedOrganization\", { id: org.id });\n};\n\nconst currentPlan = computed(() => selectedOrganization.value?.currentPlan);\nconst currentPlanColor = computed(() => {\n  if (currentPlan.value === \"Free\") return \"text-green-500 font-bold m-4\";\n  if (currentPlan.value === \"Pro\") return \"text-red-500 font-bold m-4\";\n  return \"text-gray-500\";\n});\n\nconst menuToggleMobile = () => store.dispatch(\"asideMobileToggle\");\n\nconst isMenuNavBarActive = ref(false);\nconst menuNavBarToggleIcon = computed(() =>\n  isMenuNavBarActive.value ? mdiClose : mdiDotsVertical\n);\n\nconst menuNavBarToggle = () => {\n  isMenuNavBarActive.value = !isMenuNavBarActive.value;\n};\n\nconst menuOpenLg = () => {\n  store.dispatch(\"asideLgToggle\", true);\n};\n</script>\n\n<template>\n  <nav\n    v-show=\"isNavBarVisible\"\n    class=\"top-0 left-0 right-0 fixed flex bg-white h-14 border-b z-30 w-screen transition-all duration-300 ease-in-out\"\n    :class=\"[\n      'border-cloud-gray',\n      { 'ml-60 lg:ml-0': isAsideMobileExpanded },\n      { 'xl:pl-60': !isAsideCollapsed },\n      { 'xl:pl-20': isAsideCollapsed },\n    ]\"\n  >\n    <div class=\"flex-1 items-stretch flex h-14\">\n      <nav-bar-item type=\"flex lg:hidden\" @click.prevent=\"menuToggleMobile\">\n        <icon :path=\"menuToggleMobileIcon\" size=\"24\" class=\"text-deep-space\" />\n      </nav-bar-item>\n      <nav-bar-item type=\"hidden lg:flex xl:hidden\" @click.prevent=\"menuOpenLg\">\n        <icon :path=\"mdiMenu\" size=\"24\" class=\"text-deep-space\" />\n      </nav-bar-item>\n    </div>\n    <div class=\"flex items-center space-x-4\">\n      <span class=\"text-deep-space\">Current Plan:</span>\n      <p class=\"text-electric-green font-bold\">Free</p>\n    </div>\n    <div class=\"flex-none items-stretch flex h-14 lg:hidden\">\n      <nav-bar-item @click.prevent=\"menuNavBarToggle\">\n        <icon :path=\"menuNavBarToggleIcon\" size=\"24\" />\n      </nav-bar-item>\n    </div>\n    <div\n      class=\"absolute w-screen top-14 left-0 bg-white shadow lg:w-auto lg:items-stretch lg:flex lg:grow lg:static lg:border-b-0 lg:overflow-visible lg:shadow-none dark:bg-gray-900\"\n      :class=\"[isMenuNavBarActive ? 'block' : 'hidden']\"\n    >\n      <div\n        class=\"max-h-screen-menu overflow-y-auto lg:overflow-visible lg:flex lg:items-stretch lg:justify-end lg:ml-auto\"\n      >\n        <span class=\"flex items-center\">\n          <p>Current Plan:</p>\n          <p :class=\"currentPlanColor\">{{ currentPlan }}</p>\n        </span>\n        <nav-bar-menu has-divider>\n          <nav-bar-item-label\n            :icon=\"mdiBriefcase\"\n            :label=\"selectedOrganization.name || 'Select Organization'\"\n          />\n\n          <template #dropdown>\n            <nav-bar-item\n              v-for=\"org in organizations\"\n              :key=\"org.id\"\n              @click=\"selectOrganization(org)\"\n            >\n              <nav-bar-item-label\n                :icon=\"mdiBriefcase\"\n                :label=\"org.name\"\n                :class=\"\n                  selectedOrganization.id === org.id ? 'text-blue-600' : ''\n                \"\n              />\n            </nav-bar-item>\n            <divider nav-bar />\n            <nav-bar-item>\n              <nav-bar-item-label\n                :icon=\"mdiCogOutline\"\n                label=\"Manage Organizations\"\n              />\n            </nav-bar-item>\n          </template>\n        </nav-bar-menu>\n        <nav-bar-menu has-divider>\n          <nav-bar-item-label :label=\"userName\">\n            <user-avatar class=\"w-6 h-6 mr-3 inline-flex\" />\n          </nav-bar-item-label>\n\n          <template #dropdown>\n            <nav-bar-item to=\"/profile\">\n              <nav-bar-item-label :icon=\"mdiAccount\" label=\"My Profile\" />\n            </nav-bar-item>\n            <nav-bar-item>\n              <nav-bar-item-label :icon=\"mdiCogOutline\" label=\"Settings\" />\n            </nav-bar-item>\n            <nav-bar-item>\n              <nav-bar-item-label :icon=\"mdiEmail\" label=\"Messages\" />\n            </nav-bar-item>\n            <divider nav-bar />\n            <nav-bar-item>\n              <nav-bar-item-label :icon=\"mdiLogout\" label=\"Log Out\" />\n            </nav-bar-item>\n          </template>\n        </nav-bar-menu>\n      </div>\n    </div>\n  </nav>\n</template>\n"],"mappings":"AACA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACnC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SACEC,gBAAgB,EAChBC,aAAa,EACbC,QAAQ,EACRC,eAAe,EACfC,OAAO,EACPC,UAAU,EACVC,aAAa,EACbC,QAAQ,EACRC,SAAS,EACTC,YAAY,QACP,SAAS;AAChB,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,eAAe,MAAM,kCAAkC;AAC9D,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,IAAI,MAAM,uBAAuB;;;;;;IAExC,MAAMC,KAAK,GAAGjB,QAAQ,CAAC,CAAC;IAExB,MAAMkB,gBAAgB,GAAGpB,QAAQ,CAAC,MAAMmB,KAAK,CAACE,KAAK,CAACD,gBAAgB,CAAC;IAErE,MAAME,eAAe,GAAGtB,QAAQ,CAAC,MAAM,CAACmB,KAAK,CAACE,KAAK,CAACE,YAAY,CAAC;IAEjE,MAAMC,qBAAqB,GAAGxB,QAAQ,CAAC,MAAMmB,KAAK,CAACE,KAAK,CAACG,qBAAqB,CAAC;IAE/E,MAAMC,gBAAgB,GAAGzB,QAAQ,CAAC,MAAMmB,KAAK,CAACE,KAAK,CAACI,gBAAgB,CAAC;IAErE,MAAMC,QAAQ,GAAG1B,QAAQ,CAAC,MAAMmB,KAAK,CAACE,KAAK,CAACK,QAAQ,CAAC;IAErD,MAAMC,oBAAoB,GAAG3B,QAAQ,CAAC,MACpCwB,qBAAqB,CAACI,KAAK,GAAGxB,aAAa,GAAGD,gBAChD,CAAC;IAED,MAAM0B,aAAa,GAAG7B,QAAQ,CAAC,MAAMmB,KAAK,CAACE,KAAK,CAACS,iBAAiB,CAAC;IACnE,MAAMC,oBAAoB,GAAG/B,QAAQ,CAAC,MAAMmB,KAAK,CAACa,OAAO,CAACD,oBAAoB,CAAC;IAE/E,MAAME,kBAAkB,GAAIC,GAAG,IAAK;MAClCf,KAAK,CAACgB,MAAM,CAAC,yBAAyB,EAAE;QAAEC,EAAE,EAAEF,GAAG,CAACE;MAAG,CAAC,CAAC;IACzD,CAAC;IAED,MAAMC,WAAW,GAAGrC,QAAQ,CAAC,MAAM+B,oBAAoB,CAACH,KAAK,EAAES,WAAW,CAAC;IAC3E,MAAMC,gBAAgB,GAAGtC,QAAQ,CAAC,MAAM;MACtC,IAAIqC,WAAW,CAACT,KAAK,KAAK,MAAM,EAAE,OAAO,8BAA8B;MACvE,IAAIS,WAAW,CAACT,KAAK,KAAK,KAAK,EAAE,OAAO,4BAA4B;MACpE,OAAO,eAAe;IACxB,CAAC,CAAC;IAEF,MAAMW,gBAAgB,GAAGA,CAAA,KAAMpB,KAAK,CAACqB,QAAQ,CAAC,mBAAmB,CAAC;IAElE,MAAMC,kBAAkB,GAAGxC,GAAG,CAAC,KAAK,CAAC;IACrC,MAAMyC,oBAAoB,GAAG1C,QAAQ,CAAC,MACpCyC,kBAAkB,CAACb,KAAK,GAAGvB,QAAQ,GAAGC,eACxC,CAAC;IAED,MAAMqC,gBAAgB,GAAGA,CAAA,KAAM;MAC7BF,kBAAkB,CAACb,KAAK,GAAG,CAACa,kBAAkB,CAACb,KAAK;IACtD,CAAC;IAED,MAAMgB,UAAU,GAAGA,CAAA,KAAM;MACvBzB,KAAK,CAACqB,QAAQ,CAAC,eAAe,EAAE,IAAI,CAAC;IACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}