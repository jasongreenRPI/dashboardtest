{"ast":null,"code":"import { createVNode as _createVNode, withModifiers as _withModifiers, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex-1 items-stretch flex h-14\"\n};\nconst _hoisted_2 = {\n  class: \"flex-none items-stretch flex h-14 lg:hidden\"\n};\nconst _hoisted_3 = {\n  class: \"max-h-screen-menu overflow-y-auto lg:overflow-visible lg:flex lg:items-stretch lg:justify-end lg:ml-auto\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"nav\", {\n    class: _normalizeClass([\"top-0 left-0 right-0 fixed flex bg-white h-14 border-b z-30 w-screen transition-all duration-300 ease-in-out dark:bg-gray-900 dark:border-gray-800\", [$setup.lightBorderStyle, {\n      'ml-60 lg:ml-0': $setup.isAsideMobileExpanded\n    }, {\n      'xl:pl-60': !$setup.isAsideCollapsed\n    }, {\n      'xl:pl-20': $setup.isAsideCollapsed\n    }]])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createVNode($setup[\"NavBarItem\"], {\n    type: \"flex lg:hidden\",\n    onClick: _withModifiers($setup.menuToggleMobile, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"Icon\"], {\n      path: $setup.menuToggleMobileIcon,\n      size: \"24\"\n    }, null, 8 /* PROPS */, [\"path\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode($setup[\"NavBarItem\"], {\n    type: \"hidden lg:flex xl:hidden\",\n    onClick: _withModifiers($setup.menuOpenLg, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"Icon\"], {\n      path: $setup.mdiMenu,\n      size: \"24\"\n    }, null, 8 /* PROPS */, [\"path\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode($setup[\"NavBarItem\"], null, {\n    default: _withCtx(() => [_createVNode($setup[\"NavBarSearch\"])]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_2, [_createVNode($setup[\"NavBarItem\"], {\n    onClick: _withModifiers($setup.menuNavBarToggle, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"Icon\"], {\n      path: $setup.menuNavBarToggleIcon,\n      size: \"24\"\n    }, null, 8 /* PROPS */, [\"path\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"absolute w-screen top-14 left-0 bg-white shadow lg:w-auto lg:items-stretch lg:flex lg:grow lg:static lg:border-b-0 lg:overflow-visible lg:shadow-none dark:bg-gray-900\", [$setup.isMenuNavBarActive ? 'block' : 'hidden']])\n  }, [_createElementVNode(\"div\", _hoisted_3, [_createVNode($setup[\"NavBarMenu\"], {\n    \"has-divider\": \"\"\n  }, {\n    dropdown: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.organizations, org => {\n      return _openBlock(), _createBlock($setup[\"NavBarItem\"], {\n        key: org.id,\n        onClick: $event => $setup.selectOrganization(org)\n      }, {\n        default: _withCtx(() => [_createVNode($setup[\"NavBarItemLabel\"], {\n          icon: $setup.mdiBriefcase,\n          label: org.name,\n          class: _normalizeClass({\n            'text-blue-600': $setup.selectedOrganization.id === org.id\n          })\n        }, null, 8 /* PROPS */, [\"icon\", \"label\", \"class\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n    }), 128 /* KEYED_FRAGMENT */)), _createVNode($setup[\"Divider\"], {\n      \"nav-bar\": \"\"\n    }), _createVNode($setup[\"NavBarItem\"], null, {\n      default: _withCtx(() => [_createVNode($setup[\"NavBarItemLabel\"], {\n        icon: $setup.mdiCogOutline,\n        label: \"Manage Organizations\"\n      }, null, 8 /* PROPS */, [\"icon\"])]),\n      _: 1 /* STABLE */\n    })]),\n    default: _withCtx(() => [_createVNode($setup[\"NavBarItemLabel\"], {\n      icon: $setup.mdiBriefcase,\n      label: $setup.selectedOrganization.name || 'Select Organization'\n    }, null, 8 /* PROPS */, [\"icon\", \"label\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode($setup[\"NavBarMenu\"], {\n    \"has-divider\": \"\"\n  }, {\n    dropdown: _withCtx(() => [_createVNode($setup[\"NavBarItem\"], {\n      to: \"/profile\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"NavBarItemLabel\"], {\n        icon: $setup.mdiAccount,\n        label: \"My Profile\"\n      }, null, 8 /* PROPS */, [\"icon\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"NavBarItem\"], null, {\n      default: _withCtx(() => [_createVNode($setup[\"NavBarItemLabel\"], {\n        icon: $setup.mdiCogOutline,\n        label: \"Settings\"\n      }, null, 8 /* PROPS */, [\"icon\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"NavBarItem\"], null, {\n      default: _withCtx(() => [_createVNode($setup[\"NavBarItemLabel\"], {\n        icon: $setup.mdiEmail,\n        label: \"Messages\"\n      }, null, 8 /* PROPS */, [\"icon\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode($setup[\"Divider\"], {\n      \"nav-bar\": \"\"\n    }), _createVNode($setup[\"NavBarItem\"], null, {\n      default: _withCtx(() => [_createVNode($setup[\"NavBarItemLabel\"], {\n        icon: $setup.mdiLogout,\n        label: \"Log Out\"\n      }, null, 8 /* PROPS */, [\"icon\"])]),\n      _: 1 /* STABLE */\n    })]),\n    default: _withCtx(() => [_createVNode($setup[\"NavBarItemLabel\"], {\n      label: $setup.userName\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"UserAvatar\"], {\n        class: \"w-6 h-6 mr-3 inline-flex\"\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"label\"])]),\n    _: 1 /* STABLE */\n  })])], 2 /* CLASS */)], 2 /* CLASS */)), [[_vShow, $setup.isNavBarVisible]]);\n}","map":{"version":3,"mappings":";;EAyESA,KAAK,EAAC;AAAgC;;EAuBtCA,KAAK,EAAC;AAA6C;;EAapDA,KAAK,EAAC;AAA0G;;wCA9CtHC,oBA8GM;IA5GJD,KAAK,mBAAC,oJAAoJ,GAC1IE,uBAAgB;uBAA2BA;IAAqB;mBAAyBA;IAAgB;kBAAwBA;IAAgB;MAOjKC,oBAsBM,OAtBNC,UAsBM,GArBJC,aAQeH;IAPbI,IAAI,EAAC,gBAAgB;IACpBC,OAAK,iBAAUL,uBAAgB;;sBAEhC,MAGE,CAHFG,aAGEH;MAFCM,IAAI,EAAEN,2BAAoB;MAC3BO,IAAI,EAAC;;;kCAGTJ,aAQeH;IAPbI,IAAI,EAAC,0BAA0B;IAC9BC,OAAK,iBAAUL,iBAAU;;sBAE1B,MAGE,CAHFG,aAGEH;MAFCM,IAAI,EAAEN,cAAO;MACdO,IAAI,EAAC;;;kCAGTJ,aAEeH;sBADb,MAAkB,CAAlBG,aAAkBH;;QAGtBC,oBAOM,OAPNO,UAOM,GANJL,aAKeH;IALAK,OAAK,iBAAUL,uBAAgB;;sBAC5C,MAGE,CAHFG,aAGEH;MAFCM,IAAI,EAAEN,2BAAoB;MAC3BO,IAAI,EAAC;;;oCAIXN,oBAoEM;IAnEJH,KAAK,mBAAC,wKAAwK,GACrKE,yBAAkB;MAE3BC,oBA+DM,OA/DNQ,UA+DM,GA5DJN,aA0BeH;IA1BD,aAAW,EAAX;EAAW;IAMZU,QAAQ,WAEf,MAA4B,oBAD9BX,oBAUeY,6BATCX,oBAAa,EAApBY,GAAG;2BADZC,aAUeb;QARZc,GAAG,EAAEF,GAAG,CAACG,EAAE;QACXV,OAAK,YAAEL,yBAAkB,CAACY,GAAG;;0BAE9B,MAIE,CAJFT,aAIEH;UAHCgB,IAAI,EAAEhB,mBAAY;UAClBiB,KAAK,EAAEL,GAAG,CAACM,IAAI;UACfpB,KAAK;YAAA,iBAAqBE,2BAAoB,CAACe,EAAE,KAAKH,GAAG,CAACG;UAAE;;;;oCAGjEZ,aAAmBH;MAAV,SAAO,EAAP;IAAO,IAChBG,aAKeH;wBAJb,MAGE,CAHFG,aAGEH;QAFCgB,IAAI,EAAEhB,oBAAa;QACpBiB,KAAK,EAAC;;;;sBArBZ,MAGE,CAHFd,aAGEH;MAFCgB,IAAI,EAAEhB,mBAAY;MAClBiB,KAAK,EAAEjB,2BAAoB,CAACkB,IAAI;;;MAwBrCf,aAgCeH;IAhCD,aAAW,EAAX;EAAW;IAKZU,QAAQ,WACjB,MAKe,CALfP,aAKeH;MALDmB,EAAE,EAAC;IAAU;wBACzB,MAGE,CAHFhB,aAGEH;QAFCgB,IAAI,EAAEhB,iBAAU;QACjBiB,KAAK,EAAC;;;QAGVd,aAKeH;wBAJb,MAGE,CAHFG,aAGEH;QAFCgB,IAAI,EAAEhB,oBAAa;QACpBiB,KAAK,EAAC;;;QAGVd,aAKeH;wBAJb,MAGE,CAHFG,aAGEH;QAFCgB,IAAI,EAAEhB,eAAQ;QACfiB,KAAK,EAAC;;;QAGVd,aAAmBH;MAAV,SAAO,EAAP;IAAO,IAChBG,aAKeH;wBAJb,MAGE,CAHFG,aAGEH;QAFCgB,IAAI,EAAEhB,gBAAS;QAChBiB,KAAK,EAAC;;;;sBA3BZ,MAEqB,CAFrBd,aAEqBH;MAFAiB,KAAK,EAAEjB;IAAQ;wBAClC,MAAgD,CAAhDG,aAAgDH;QAAnCF,KAAK,EAAC;MAA0B;;;;qDA5E7CE,sBAAe","names":["class","_createElementBlock","$setup","_createElementVNode","_hoisted_1","_createVNode","type","onClick","path","size","_hoisted_2","_hoisted_3","dropdown","_Fragment","org","_createBlock","key","id","icon","label","name","to"],"sourceRoot":"","sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/NavBar.vue"],"sourcesContent":["<script setup>\nimport { computed, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n  mdiForwardburger,\n  mdiBackburger,\n  mdiClose,\n  mdiDotsVertical,\n  mdiMenu,\n  mdiAccount,\n  mdiCogOutline,\n  mdiEmail,\n  mdiLogout,\n  mdiBriefcase,\n} from \"@mdi/js\";\nimport NavBarItem from \"@/components/NavBarItem.vue\";\nimport NavBarItemLabel from \"@/components/NavBarItemLabel.vue\";\nimport NavBarMenu from \"@/components/NavBarMenu.vue\";\nimport Divider from \"@/components/Divider.vue\";\nimport UserAvatar from \"@/components/UserAvatar.vue\";\nimport Icon from \"@/components/Icon.vue\";\nimport NavBarSearch from \"@/components/NavBarSearch.vue\";\n\nconst store = useStore();\n\nconst lightBorderStyle = computed(() => store.state.lightBorderStyle);\n\nconst isNavBarVisible = computed(() => !store.state.isFullScreen);\n\nconst isAsideMobileExpanded = computed(() => store.state.isAsideMobileExpanded);\n\nconst isAsideCollapsed = computed(() => store.state.isAsideCollapsed);\n\nconst userName = computed(() => store.state.userName);\n\nconst menuToggleMobileIcon = computed(() =>\n  isAsideMobileExpanded.value ? mdiBackburger : mdiForwardburger\n);\n\nconst organizations = computed(() => store.state.userOrganizations);\nconst selectedOrganization = computed(() => store.getters.selectedOrganization);\n\nconst selectOrganization = (org) => {\n  store.commit(\"setSelectedOrganization\", { id: org.id });\n};\n\nconst menuToggleMobile = () => store.dispatch(\"asideMobileToggle\");\n\nconst isMenuNavBarActive = ref(false);\nconst menuNavBarToggleIcon = computed(() =>\n  isMenuNavBarActive.value ? mdiClose : mdiDotsVertical\n);\n\nconst menuNavBarToggle = () => {\n  isMenuNavBarActive.value = !isMenuNavBarActive.value;\n};\n\nconst menuOpenLg = () => {\n  store.dispatch(\"asideLgToggle\", true);\n};\n</script>\n\n<template>\n  <nav\n    v-show=\"isNavBarVisible\"\n    class=\"top-0 left-0 right-0 fixed flex bg-white h-14 border-b z-30 w-screen transition-all duration-300 ease-in-out dark:bg-gray-900 dark:border-gray-800\"\n    :class=\"[\n      lightBorderStyle,\n      { 'ml-60 lg:ml-0': isAsideMobileExpanded },\n      { 'xl:pl-60': !isAsideCollapsed },\n      { 'xl:pl-20': isAsideCollapsed },\n    ]\"\n  >\n    <div class=\"flex-1 items-stretch flex h-14\">\n      <nav-bar-item\n        type=\"flex lg:hidden\"\n        @click.prevent=\"menuToggleMobile\"\n      >\n        <icon\n          :path=\"menuToggleMobileIcon\"\n          size=\"24\"\n        />\n      </nav-bar-item>\n      <nav-bar-item\n        type=\"hidden lg:flex xl:hidden\"\n        @click.prevent=\"menuOpenLg\"\n      >\n        <icon\n          :path=\"mdiMenu\"\n          size=\"24\"\n        />\n      </nav-bar-item>\n      <nav-bar-item>\n        <nav-bar-search />\n      </nav-bar-item>\n    </div>\n    <div class=\"flex-none items-stretch flex h-14 lg:hidden\">\n      <nav-bar-item @click.prevent=\"menuNavBarToggle\">\n        <icon\n          :path=\"menuNavBarToggleIcon\"\n          size=\"24\"\n        />\n      </nav-bar-item>\n    </div>\n    <div\n      class=\"absolute w-screen top-14 left-0 bg-white shadow lg:w-auto lg:items-stretch lg:flex lg:grow lg:static lg:border-b-0 lg:overflow-visible lg:shadow-none dark:bg-gray-900\"\n      :class=\"[isMenuNavBarActive ? 'block' : 'hidden']\"\n    >\n      <div\n        class=\"max-h-screen-menu overflow-y-auto lg:overflow-visible lg:flex lg:items-stretch lg:justify-end lg:ml-auto\"\n      >\n        <nav-bar-menu has-divider>\n          <nav-bar-item-label\n            :icon=\"mdiBriefcase\"\n            :label=\"selectedOrganization.name || 'Select Organization'\"\n          />\n\n          <template #dropdown>\n            <nav-bar-item\n              v-for=\"org in organizations\"\n              :key=\"org.id\"\n              @click=\"selectOrganization(org)\"\n            >\n              <nav-bar-item-label\n                :icon=\"mdiBriefcase\"\n                :label=\"org.name\"\n                :class=\"{ 'text-blue-600': selectedOrganization.id === org.id }\"\n              />\n            </nav-bar-item>\n            <divider nav-bar />\n            <nav-bar-item>\n              <nav-bar-item-label\n                :icon=\"mdiCogOutline\"\n                label=\"Manage Organizations\"\n              />\n            </nav-bar-item>\n          </template>\n        </nav-bar-menu>\n        <nav-bar-menu has-divider>\n          <nav-bar-item-label :label=\"userName\">\n            <user-avatar class=\"w-6 h-6 mr-3 inline-flex\" />\n          </nav-bar-item-label>\n\n          <template #dropdown>\n            <nav-bar-item to=\"/profile\">\n              <nav-bar-item-label\n                :icon=\"mdiAccount\"\n                label=\"My Profile\"\n              />\n            </nav-bar-item>\n            <nav-bar-item>\n              <nav-bar-item-label\n                :icon=\"mdiCogOutline\"\n                label=\"Settings\"\n              />\n            </nav-bar-item>\n            <nav-bar-item>\n              <nav-bar-item-label\n                :icon=\"mdiEmail\"\n                label=\"Messages\"\n              />\n            </nav-bar-item>\n            <divider nav-bar />\n            <nav-bar-item>\n              <nav-bar-item-label\n                :icon=\"mdiLogout\"\n                label=\"Log Out\"\n              />\n            </nav-bar-item>\n          </template>\n        </nav-bar-menu>\n      </div>\n    </div>\n  </nav>\n</template>\n"]},"metadata":{},"sourceType":"module"}