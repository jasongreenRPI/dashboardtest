{"ast":null,"code":"import { createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"aside\", {\n    id: \"aside\",\n    class: _normalizeClass([\"fixed top-0 z-40 h-screen transition-all duration-300 ease-in-out lg:left-0 dark:border-r dark:border-gray-800 dark:bg-gray-900/70 lg:dark:bg-gray-900 xl:dark:bg-gray-900/70\", [$setup.asideStyle, $setup.isAsideMobileExpanded ? 'left-0' : '-left-60', $setup.isAsideLgActive ? 'block' : 'lg:hidden xl:block', $setup.isAsideCollapsed ? 'w-20' : 'w-60']])\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"flex flex-row w-full flex-1 h-14 items-center dark:bg-transparent\", [$setup.asideBrandStyle]])\n  }, [_createVNode($setup[\"NavBarItem\"], {\n    type: \"hidden lg:flex xl:hidden\",\n    \"active-color\": $setup.asideMenuCloseLgStyle,\n    active: \"\",\n    onClick: $setup.asideLgClose\n  }, {\n    default: _withCtx(function () {\n      return [_createVNode($setup[\"Icon\"], {\n        path: $setup.mdiMenu,\n        class: \"cursor-pointer\",\n        size: \"24\"\n      }, null, 8\n      /* PROPS */\n      , [\"path\"])];\n    }),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"active-color\"]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"flex-1 px-3 flex items-center\", {\n      'justify-center': $setup.isAsideCollapsed,\n      'justify-between': !$setup.isAsideCollapsed\n    }])\n  }, [!$setup.isAsideCollapsed ? (_openBlock(), _createElementBlock(\"b\", _hoisted_1, \"Hireflow\")) : _createCommentVNode(\"v-if\", true), _createVNode($setup[\"NavBarItem\"], {\n    class: \"lg:flex\",\n    \"active-color\": $setup.asideMenuCloseLgStyle,\n    active: \"\",\n    onClick: $setup.toggleCollapse\n  }, {\n    default: _withCtx(function () {\n      return [_createVNode($setup[\"Icon\"], {\n        path: $setup.isAsideCollapsed ? $setup.mdiChevronRight : $setup.mdiChevronLeft,\n        class: \"cursor-pointer\",\n        size: \"24\"\n      }, null, 8\n      /* PROPS */\n      , [\"path\"])];\n    }),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"active-color\"])], 2\n  /* CLASS */\n  )], 2\n  /* CLASS */\n  ), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.menu, function (menuGroup, index) {\n    return _openBlock(), _createElementBlock(_Fragment, null, [typeof menuGroup === 'string' ? (_openBlock(), _createElementBlock(\"p\", {\n      key: \"a-\".concat(index),\n      class: _normalizeClass([\"p-3 text-xs uppercase\", [$setup.asideMenuLabelStyle, {\n        'opacity-0': $setup.isAsideCollapsed\n      }]])\n    }, _toDisplayString(menuGroup), 3\n    /* TEXT, CLASS */\n    )) : (_openBlock(), _createBlock($setup[\"AsideMenuList\"], {\n      key: \"b-\".concat(index),\n      menu: menuGroup,\n      \"is-collapsed\": $setup.isAsideCollapsed,\n      onMenuClick: $setup.menuClick\n    }, null, 8\n    /* PROPS */\n    , [\"menu\", \"is-collapsed\"]))], 64\n    /* STABLE_FRAGMENT */\n    );\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  ))])], 2\n  /* CLASS */\n  )), [[_vShow, !$setup.isFullScreen]]);\n}","map":{"version":3,"mappings":";;;;;wCA+CEA,oBAgEQ,OAhER,EAgEQ;AA9DNC,MAAE,EAAC,OA8DG;AA7DNC,SAAK,mBAAC,+KAAD,EAAgL,CACrKC,iBADqK,EACnJA,+BAAqB,QAArB,GAAqB,UAD8H,EAC9FA,yBAAe,OAAf,GAAe,oBAD+E,EACtCA,0BAAgB,MAAhB,GAAgB,MADsB,CAAhL;AA6DC,GAhER,GAWEC,oBAiCM,KAjCN,EAiCM;AAhCJF,SAAK,mBAAC,mEAAD,EAAoE,CAChEC,sBADgE,CAApE;AAgCD,GAjCN,GAIEE,aAOeF,oBAPf,EAOe;AANbG,QAAI,EAAC,0BAMQ;AALZ,oBAAcH,4BAKF;AAJbI,UAAM,EAAN,EAIa;AAHZC,WAAK,EAAEL;AAGK,GAPf;sBAME;AAAA,aAAyD,CAAzDE,aAAyDF,cAAzD,EAAyD;AAAlDM,YAAI,EAAEN,cAA4C;AAAnCD,aAAK,EAAC,gBAA6B;AAAZQ,YAAI,EAAC;AAAO,OAAzD;;AAAA,iBAAyD,CAAzD;AAAA;;;;GANF;;AAAA,uBAQAN,oBAoBM,KApBN,EAoBM;AAnBJF,SAAK,mBAAC,+BAAD,EAAgC;wBACCC,uBADD;0BACiDA;AADjD,KAAhC;AAmBD,GApBN,IAOYA,yCAAVH,oBAAwC,GAAxC,EAAwCW,UAAxC,EAA4B,UAA5B,wCACAN,aAWeF,oBAXf,EAWe;AAVbD,SAAK,EAAC,SAUO;AATZ,oBAAcC,4BASF;AARbI,UAAM,EAAN,EAQa;AAPZC,WAAK,EAAEL;AAOK,GAXf;sBAME;AAAA,aAIE,CAJFE,aAIEF,cAJF,EAIE;AAHCM,YAAI,EAAEN,0BAAmBA,sBAAnB,GAAqCA,qBAG5C;AAFAD,aAAK,EAAC,gBAEN;AADAQ,YAAI,EAAC;AACL,OAJF;;AAAA,iBAIE,CAJF;AAAA;;;;GANF;;AAAA,sBARF;;AAAA,IAZF;;AAAA,KAkCAN,oBAkBM,KAlBN,EAkBM,IAlBN,EAkBM,oBAjBJJ,oBAgBWY,SAhBX,EAgBW,IAhBX,EAgBWC,YAhB4BC,WAgB5B,EAhBgC,UAAzBC,SAAyB,EAAdC,KAAc,EAAT;sEAEjBD,cAAS,0BADxBf,oBAOI,GAPJ,EAOI;AALDiB,SAAG,cAAOD,KAAP,CAKF;AAJFd,WAAK,mBAAC,uBAAD,EAAwB,CACpBC,0BADoB,EACD;AAAA,qBAAiBA;AAAjB,OADC,CAAxB;AAIH,KAPJ,mBAMKY,UANL,EAMc;AAAA;AANd,wBAQAG,aAMEf,uBANF,EAME;AAJCc,SAAG,cAAOD,KAAP,CAIJ;AAHCG,UAAI,EAAEJ,SAGP;AAFC,sBAAcZ,uBAEf;AADCiB,iBAAU,EAAEjB;AACb,KANF;;AAAA;;;GAOS,CAhBX;;AAAA,GAiBI,EAlBN,EA7CF;;AAAA,iBACWA","names":["_createElementBlock","id","class","$setup","_createElementVNode","_createVNode","type","active","onClick","path","size","_hoisted_1","_Fragment","_renderList","$props","menuGroup","index","key","_createBlock","menu","onMenuClick"],"sourceRoot":"","sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/AsideMenu.vue"],"sourcesContent":["<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { mdiMenu, mdiChevronLeft, mdiChevronRight } from \"@mdi/js\";\nimport AsideMenuList from \"@/components/AsideMenuList.vue\";\nimport NavBarItem from \"@/components/NavBarItem.vue\";\nimport Icon from \"@/components/Icon.vue\";\n\ndefineProps({\n  menu: {\n    type: Array,\n    default: () => [],\n  },\n});\n\nconst store = useStore();\n\nconst asideStyle = computed(() => store.state.asideStyle);\n\nconst asideBrandStyle = computed(() => store.state.asideBrandStyle);\n\nconst asideMenuCloseLgStyle = computed(() => store.state.asideMenuCloseLgStyle);\n\nconst asideMenuLabelStyle = computed(() => store.state.asideMenuLabelStyle);\n\nconst isFullScreen = computed(() => store.state.isFullScreen);\n\nconst isAsideMobileExpanded = computed(() => store.state.isAsideMobileExpanded);\n\nconst isAsideLgActive = computed(() => store.state.isAsideLgActive);\n\nconst isAsideCollapsed = computed(() => store.state.isAsideCollapsed);\n\nconst asideLgClose = () => {\n  store.dispatch(\"asideLgToggle\", false);\n};\n\nconst toggleCollapse = () => {\n  store.dispatch(\"asideCollapseToggle\");\n};\n\nconst menuClick = (event, item) => {\n  //\n};\n</script>\n\n<template>\n  <aside\n    v-show=\"!isFullScreen\"\n    id=\"aside\"\n    class=\"fixed top-0 z-40 h-screen transition-all duration-300 ease-in-out lg:left-0 dark:border-r dark:border-gray-800 dark:bg-gray-900/70 lg:dark:bg-gray-900 xl:dark:bg-gray-900/70\"\n    :class=\"[\n      asideStyle,\n      isAsideMobileExpanded ? 'left-0' : '-left-60',\n      isAsideLgActive ? 'block' : 'lg:hidden xl:block',\n      isAsideCollapsed ? 'w-20' : 'w-60',\n    ]\"\n  >\n    <div\n      class=\"flex flex-row w-full flex-1 h-14 items-center dark:bg-transparent\"\n      :class=\"[asideBrandStyle]\"\n    >\n      <nav-bar-item\n        type=\"hidden lg:flex xl:hidden\"\n        :active-color=\"asideMenuCloseLgStyle\"\n        active\n        @click=\"asideLgClose\"\n      >\n        <icon :path=\"mdiMenu\" class=\"cursor-pointer\" size=\"24\" />\n      </nav-bar-item>\n      <div\n        class=\"flex-1 px-3 flex items-center\"\n        :class=\"{\n          'justify-center': isAsideCollapsed,\n          'justify-between': !isAsideCollapsed,\n        }\"\n      >\n        <b v-if=\"!isAsideCollapsed\">Hireflow</b>\n        <nav-bar-item\n          class=\"lg:flex\"\n          :active-color=\"asideMenuCloseLgStyle\"\n          active\n          @click=\"toggleCollapse\"\n        >\n          <icon\n            :path=\"isAsideCollapsed ? mdiChevronRight : mdiChevronLeft\"\n            class=\"cursor-pointer\"\n            size=\"24\"\n          />\n        </nav-bar-item>\n      </div>\n    </div>\n    <div>\n      <template v-for=\"(menuGroup, index) in menu\">\n        <p\n          v-if=\"typeof menuGroup === 'string'\"\n          :key=\"`a-${index}`\"\n          class=\"p-3 text-xs uppercase\"\n          :class=\"[asideMenuLabelStyle, { 'opacity-0': isAsideCollapsed }]\"\n        >\n          {{ menuGroup }}\n        </p>\n        <aside-menu-list\n          v-else\n          :key=\"`b-${index}`\"\n          :menu=\"menuGroup\"\n          :is-collapsed=\"isAsideCollapsed\"\n          @menu-click=\"menuClick\"\n        />\n      </template>\n    </div>\n  </aside>\n</template>\n"]},"metadata":{},"sourceType":"module"}