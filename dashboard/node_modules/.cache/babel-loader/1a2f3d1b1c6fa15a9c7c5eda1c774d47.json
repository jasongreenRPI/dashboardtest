{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"root\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","_createElementBlock","_hoisted_1"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/Charts/LineChart.vue"],"sourcesContent":["<script setup>\nimport { ref, watch, computed, onMounted } from 'vue'\nimport {\n  Chart,\n  LineElement,\n  PointElement,\n  LineController,\n  LinearScale,\n  CategoryScale,\n  Tooltip\n} from 'chart.js'\n\nconst props = defineProps({\n  data: {\n    type: Object,\n    required: true\n  }\n})\n\nconst root = ref(null)\n\nlet chart\n\nChart.register(LineElement, PointElement, LineController, LinearScale, CategoryScale, Tooltip)\n\nonMounted(() => {\n  chart = new Chart(root.value, {\n    type: 'line',\n    data: props.data,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          display: false\n        },\n        x: {\n          display: true\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    }\n  })\n})\n\nconst chartData = computed(() => props.data)\n\nwatch(chartData, data => {\n  if (chart) {\n    chart.data = data\n    chart.update()\n  }\n})\n</script>\n\n<template>\n  <canvas ref=\"root\" />\n</template>\n"],"mappings":";;EA4DUA,GAAG,EAAC;AAAM;;uBAAlBC,mBAAA,CAAqB,UAArBC,UAAqB","ignoreList":[]},"metadata":{},"sourceType":"module"}