{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"flex items-center space-x-4\"\n};\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Job Posting Dashboard\", -1 /* HOISTED */);\nvar _hoisted_3 = [\"value\"];\nvar _hoisted_4 = {\n  \"class\": \"grid grid-cols-1 gap-6 lg:grid-cols-3 mb-6\"\n};\nvar _hoisted_5 = /*#__PURE__*/_createTextVNode(\" Click on applicants to view the interview prep doc or the analytics sheet. \");\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"TitleBar\"], {\n    \"title-stack\": $setup.titleStack\n  }, null, 8 /* PROPS */, [\"title-stack\"]), _createVNode($setup[\"HeroBar\"], null, {\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, $setup.organizationJobs.length ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n        key: 0,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $setup.selectedJob = $event;\n        }),\n        \"class\": \"rounded-lg border-gray-300 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-300\"\n      }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.organizationJobs, function (job) {\n        return _openBlock(), _createElementBlock(\"option\", {\n          key: job.id,\n          value: job\n        }, _toDisplayString(job.id), 9 /* TEXT, PROPS */, _hoisted_3);\n      }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */)), [[_vModelSelect, $setup.selectedJob]]) : _createCommentVNode(\"v-if\", true)])];\n    }),\n    _: 1 /* STABLE */\n  }), _createVNode($setup[\"MainSection\"], null, {\n    \"default\": _withCtx(function () {\n      var _$setup$selectedJob, _$setup$selectedJob2, _$setup$selectedOrgan, _$setup$selectedJob3;\n      return [_createElementVNode(\"div\", _hoisted_4, [_createVNode($setup[\"CardWidget\"], {\n        trend: \"12%\",\n        \"trend-type\": \"up\",\n        color: \"text-emerald-500\",\n        icon: $setup.mdiAccountMultiple,\n        number: $setup.selectedJobApplicationsCount,\n        label: 'Applications for ' + (((_$setup$selectedJob = $setup.selectedJob) === null || _$setup$selectedJob === void 0 ? void 0 : _$setup$selectedJob.name) || 'All Jobs')\n      }, null, 8 /* PROPS */, [\"icon\", \"number\", \"label\"]), _createVNode($setup[\"CardWidget\"], {\n        icon: $setup.mdiRobot,\n        label: 'Config: ' + (((_$setup$selectedJob2 = $setup.selectedJob) === null || _$setup$selectedJob2 === void 0 ? void 0 : _$setup$selectedJob2.id) || 'No Job Selected'),\n        trend: $setup.jobChatbotConfigStatus,\n        \"trend-type\": $setup.jobChatbotConfigStatus === 'Setup' ? 'up' : 'alert',\n        \"trend-icon\": $setup.jobChatbotConfigStatus === 'Setup' ? $setup.mdiCheck : null,\n        color: \"text-blue-500\",\n        onConfigClick: _cache[1] || (_cache[1] = function ($event) {\n          return $setup.handleConfigClick('job');\n        })\n      }, null, 8 /* PROPS */, [\"icon\", \"label\", \"trend\", \"trend-type\", \"trend-icon\"]), _createVNode($setup[\"CardWidget\"], {\n        icon: $setup.mdiOfficeBuilding,\n        label: 'Config: ' + (((_$setup$selectedOrgan = $setup.selectedOrganization) === null || _$setup$selectedOrgan === void 0 ? void 0 : _$setup$selectedOrgan.name) || 'No Organization'),\n        trend: $setup.orgChatbotConfigStatus,\n        \"trend-type\": $setup.orgChatbotConfigStatus === 'Setup' ? 'up' : 'alert',\n        \"trend-icon\": $setup.orgChatbotConfigStatus === 'Setup' ? $setup.mdiCheck : null,\n        color: \"text-purple-500\",\n        onConfigClick: _cache[2] || (_cache[2] = function ($event) {\n          return $setup.handleConfigClick('org');\n        })\n      }, null, 8 /* PROPS */, [\"icon\", \"label\", \"trend\", \"trend-type\", \"trend-icon\"])]), _createVNode($setup[\"TitleSubBar\"], {\n        icon: $setup.mdiMonitorCellphone,\n        title: \"Applications for \".concat(((_$setup$selectedJob3 = $setup.selectedJob) === null || _$setup$selectedJob3 === void 0 ? void 0 : _$setup$selectedJob3.name) || 'All Jobs')\n      }, null, 8 /* PROPS */, [\"icon\", \"title\"]), _createVNode($setup[\"Notification\"], {\n        color: \"info\",\n        icon: $setup.mdiMonitorCellphone\n      }, {\n        \"default\": _withCtx(function () {\n          return [_hoisted_5];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"icon\"]), _createVNode($setup[\"CardComponent\"], {\n        icon: $setup.mdiMonitorCellphone,\n        title: \"Applicants\",\n        \"has-table\": \"\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode($setup[\"ClientsTable\"], {\n            checkable: false,\n            items: $setup.selectedJobApplications\n          }, null, 8 /* PROPS */, [\"items\"])];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"icon\"])];\n    }),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createVNode","$setup","titleStack","_hoisted_1","_hoisted_2","organizationJobs","length","_createElementBlock","selectedJob","$event","_Fragment","_renderList","job","key","id","value","_hoisted_3","_$setup$selectedJob","_$setup$selectedJob2","_$setup$selectedOrgan","_$setup$selectedJob3","_hoisted_4","trend","color","icon","mdiAccountMultiple","number","selectedJobApplicationsCount","label","name","mdiRobot","jobChatbotConfigStatus","mdiCheck","onConfigClick","_cache","handleConfigClick","mdiOfficeBuilding","selectedOrganization","orgChatbotConfigStatus","mdiMonitorCellphone","title","concat","checkable","items","selectedJobApplications"],"sources":["/Users/jasongreenberg/Desktop/testdashboard/dashboardtest/dashboard/src/views/Home.vue"],"sourcesContent":["<script setup>\nimport { computed, ref, onMounted, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n  mdiAccountMultiple,\n  mdiMonitorCellphone,\n  mdiRobot,\n  mdiOfficeBuilding,\n  mdiCheck,\n} from \"@mdi/js\";\nimport MainSection from \"@/components/MainSection.vue\";\nimport TitleBar from \"@/components/TitleBar.vue\";\nimport HeroBar from \"@/components/HeroBar.vue\";\nimport CardWidget from \"@/components/CardWidget.vue\";\nimport CardComponent from \"@/components/CardComponent.vue\";\nimport ClientsTable from \"@/components/ClientsTable.vue\";\nimport Notification from \"@/components/Notification.vue\";\nimport TitleSubBar from \"@/components/TitleSubBar.vue\";\n\nconst store = useStore();\n\nconst titleStack = computed(() => {\n  const orgName = store.getters.selectedOrganization?.name || \"\";\n  return [\"Admin\", \"Dashboard\", orgName];\n});\n\nconst selectedOrganization = computed(\n  () => store.getters.selectedOrganization || {}\n);\n\nconst organizationJobs = computed(() => selectedOrganization.value?.jobs || []);\n\nconst selectedJob = ref(null);\n\nconst selectedJobApplications = computed(() => {\n  if (!selectedJob.value) return [];\n  return selectedJob.value.applications || [];\n});\n\nconsole.log(selectedJobApplications.value);\n\nconst selectedJobApplicationsCount = computed(\n  () => selectedJobApplications.value.length\n);\n\n// Mock data for config status - in a real app, this would come from the store\nconst jobChatbotConfigStatus = ref(\"Not Setup\");\nconst orgChatbotConfigStatus = ref(\"Setup\");\n\n// Function to handle gear icon click\nconst handleConfigClick = (type) => {\n  // For now, just navigate to \"#\"\n  window.location.href = \"#\";\n};\n\n// Initialize data\nonMounted(() => {\n  // Make sure organizations are initialized\n  if (!store.state.userOrganizations.length) {\n    store.dispatch(\"initializeOrganizations\");\n  }\n  // Set first job as default when component mounts or organization changes\n  if (organizationJobs.value.length > 0) {\n    selectedJob.value = organizationJobs.value[0];\n  }\n});\n\n// Watch for organization changes to update selected job\nwatch(\n  () => selectedOrganization.value,\n  (newOrg) => {\n    if (newOrg?.jobs?.length > 0) {\n      selectedJob.value = newOrg.jobs[0];\n    } else {\n      selectedJob.value = null;\n    }\n  }\n);\n</script>\n\n<template>\n  <title-bar :title-stack=\"titleStack\" />\n  <hero-bar>\n    <div class=\"flex items-center space-x-4\">\n      <span>Job Posting Dashboard</span>\n      <select\n        v-if=\"organizationJobs.length\"\n        v-model=\"selectedJob\"\n        class=\"rounded-lg border-gray-300 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-300\"\n      >\n        <option v-for=\"job in organizationJobs\" :key=\"job.id\" :value=\"job\">\n          {{ job.id }}\n        </option>\n      </select>\n    </div>\n  </hero-bar>\n  <main-section>\n    <div class=\"grid grid-cols-1 gap-6 lg:grid-cols-3 mb-6\">\n      <card-widget\n        trend=\"12%\"\n        trend-type=\"up\"\n        color=\"text-emerald-500\"\n        :icon=\"mdiAccountMultiple\"\n        :number=\"selectedJobApplicationsCount\"\n        :label=\"'Applications for ' + (selectedJob?.name || 'All Jobs')\"\n      />\n      <card-widget\n        :icon=\"mdiRobot\"\n        :label=\"'Config: ' + (selectedJob?.id || 'No Job Selected')\"\n        :trend=\"jobChatbotConfigStatus\"\n        :trend-type=\"jobChatbotConfigStatus === 'Setup' ? 'up' : 'alert'\"\n        :trend-icon=\"jobChatbotConfigStatus === 'Setup' ? mdiCheck : null\"\n        color=\"text-blue-500\"\n        @config-click=\"handleConfigClick('job')\"\n      />\n      <card-widget\n        :icon=\"mdiOfficeBuilding\"\n        :label=\"'Config: ' + (selectedOrganization?.name || 'No Organization')\"\n        :trend=\"orgChatbotConfigStatus\"\n        :trend-type=\"orgChatbotConfigStatus === 'Setup' ? 'up' : 'alert'\"\n        :trend-icon=\"orgChatbotConfigStatus === 'Setup' ? mdiCheck : null\"\n        color=\"text-purple-500\"\n        @config-click=\"handleConfigClick('org')\"\n      />\n    </div>\n\n    <title-sub-bar\n      :icon=\"mdiMonitorCellphone\"\n      :title=\"`Applications for ${selectedJob?.name || 'All Jobs'}`\"\n    />\n\n    <notification color=\"info\" :icon=\"mdiMonitorCellphone\">\n      Click on applicants to view the interview prep doc or the analytics sheet.\n    </notification>\n\n    <card-component :icon=\"mdiMonitorCellphone\" title=\"Applicants\" has-table>\n      <clients-table :checkable=\"false\" :items=\"selectedJobApplications\" />\n    </card-component>\n  </main-section>\n</template>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}