{"ast":null,"code":"import { renderSlot as _renderSlot, normalizeClass as _normalizeClass, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"MainSection\"], {\n    class: _normalizeClass([\"flex h-screen items-center justify-center\", $setup.colorClass])\n  }, {\n    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"default\", {\n      cardClass: \"w-11/12 md:w-7/12 lg:w-6/12 xl:w-4/12 shadow-2xl\",\n      cardRounded: \"rounded-lg\"\n    })]),\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"class\"]);\n}","map":{"version":3,"names":["_createBlock","$setup","class","_normalizeClass","colorClass","_renderSlot","_ctx","$slots","cardClass","cardRounded"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/FullScreenSection.vue"],"sourcesContent":["<script setup>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { sectionBgLogin, sectionBgLoginDark, sectionBgError, sectionBgErrorDark } from '@/colors'\nimport MainSection from '@/components/MainSection.vue'\n\nconst props = defineProps({\n  bg: {\n    type: String,\n    required: true,\n    validator: value => ['login', 'error'].includes(value)\n  }\n})\n\nconst store = useStore()\n\nconst darkMode = computed(() => store.state.darkMode)\n\nconst colorClass = computed(() => {\n  switch (props.bg) {\n    case 'login':\n      return darkMode.value ? sectionBgLoginDark : sectionBgLogin\n    case 'error':\n      return darkMode.value ? sectionBgErrorDark : sectionBgError\n  }\n\n  return ''\n})\n</script>\n\n<template>\n  <main-section\n    class=\"flex h-screen items-center justify-center\"\n    :class=\"colorClass\"\n  >\n    <slot\n      card-class=\"w-11/12 md:w-7/12 lg:w-6/12 xl:w-4/12 shadow-2xl\"\n      card-rounded=\"rounded-lg\"\n    />\n  </main-section>\n</template>\n"],"mappings":";;uBA+BEA,YAAA,CAQeC,MAAA;IAPbC,KAAK,EAAAC,eAAA,EAAC,2CAA2C,EACzCF,MAAA,CAAAG,UAAU;;sBAElB,MAGE,CAHFC,WAAA,CAGEC,IAAA,CAAAC,MAAA;MAFAC,SAAS,EAAE,kDAAkD;MAC7DC,WAAW,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module"}