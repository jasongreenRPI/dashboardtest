{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { normalizeClass as _normalizeClass, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  class: \"flex items-stretch justify-start relative\"\n};\nvar _hoisted_2 = {\n  class: \"inline-flex\"\n};\nvar _hoisted_3 = [\"accept\"];\nvar _hoisted_4 = {\n  key: 0\n};\nvar _hoisted_5 = {\n  class: \"inline-flex px-4 py-2 justify-center bg-gray-100 dark:bg-gray-800 border-gray-200 dark:border-gray-700 border rounded-r\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"label\", _hoisted_2, [_createVNode($setup[\"JbButton\"], {\n    as: \"a\",\n    label: $props.label,\n    icon: $props.icon,\n    color: $props.color,\n    class: _normalizeClass({\n      'rounded-r-none': $setup.file\n    })\n  }, null, 8\n  /* PROPS */\n  , [\"label\", \"icon\", \"color\", \"class\"]), _createElementVNode(\"input\", {\n    ref: \"root\",\n    type: \"file\",\n    class: \"absolute top-0 left-0 w-full h-full opacity-0 outline-none cursor-pointer -z-1\",\n    accept: $props.accept,\n    onInput: $setup.upload\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_3)]), $setup.file ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString($setup.file.name), 1\n  /* TEXT */\n  )])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;AAkFOA,OAAK,EAAC;;;AACFA,OAAK,EAAC;;;;;;;AAkBTA,OAAK,EAAC;;;uBAnBZC,oBAwBM,KAxBN,cAwBM,CAvBJC,oBAeQ,OAfR,cAeQ,CAdNC,aAMEC,kBANF,EAME;AALAC,MAAE,EAAC,GAKH;AAJCC,SAAK,EAAEC,YAIR;AAHCC,QAAI,EAAED,WAGP;AAFCE,SAAK,EAAEF,YAER;AADCP,SAAK;AAAA,wBAAsBI;AAAtB;AACN,GANF;;AAAA,wCAcM,EAPNF,oBAMC,OAND,EAMC;AALCQ,OAAG,EAAC,MAKL;AAJCC,QAAI,EAAC,MAIN;AAHCX,SAAK,EAAC,gFAGP;AAFEY,UAAM,EAAEL,aAEV;AADEM,WAAK,EAAET;AACT,GAND;;AAAA,eAOM,CAfR,CAuBI,EAPOA,6BAAXH,oBAMM,KANN,EAMMa,UANN,EAMM,CALJZ,oBAIO,MAJP,cAIOa,iBADFX,YAAKY,IACH,CAJP,EAGc;AAAA;AAHd,GAKI,CANN,sCAOI,CAxBN","names":["class","_createElementBlock","_createElementVNode","_createVNode","$setup","as","label","$props","icon","color","ref","type","accept","onInput","_hoisted_4","_toDisplayString","name"],"sourceRoot":"","sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/FilePicker.vue"],"sourcesContent":["<script setup>\nimport { mdiUpload } from '@mdi/js'\nimport { computed, ref, watch } from 'vue'\nimport JbButton from '@/components/JbButton.vue'\n\nconst props = defineProps({\n  modelValue: {\n    type: [Object, File, Array],\n    default: null\n  },\n  label: {\n    type: String,\n    default: 'Upload'\n  },\n  icon: {\n    type: String,\n    default: mdiUpload\n  },\n  accept: {\n    type: String,\n    default: null\n  },\n  color: {\n    type: String,\n    default: 'info'\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst root = ref(null)\n\nconst file = ref(props.modelValue)\n\nconst modelValueProp = computed(() => props.modelValue)\n\nwatch(modelValueProp, value => {\n  file.value = value\n\n  if (!value) {\n    root.value.input.value = null\n  }\n})\n\nconst upload = event => {\n  const value = event.target.files || event.dataTransfer.files\n\n  file.value = value[0]\n\n  emit('update:modelValue', file.value)\n\n  // Use this as an example for handling file uploads\n  // let formData = new FormData()\n  // formData.append('file', file.value)\n\n  // const mediaStoreRoute = `/your-route/`\n\n  // axios\n  //   .post(mediaStoreRoute, formData, {\n  //     headers: {\n  //       'Content-Type': 'multipart/form-data'\n  //     },\n  //     onUploadProgress: progressEvent\n  //   })\n  //   .then(r => {\n  //\n  //   })\n  //   .catch(err => {\n  //\n  //   })\n}\n\n// const uploadPercent = ref(0)\n//\n// const progressEvent = progressEvent => {\n//   uploadPercent.value = Math.round(\n//     (progressEvent.loaded * 100) / progressEvent.total\n//   )\n// }\n</script>\n\n<template>\n  <div class=\"flex items-stretch justify-start relative\">\n    <label class=\"inline-flex\">\n      <jb-button\n        as=\"a\"\n        :label=\"label\"\n        :icon=\"icon\"\n        :color=\"color\"\n        :class=\"{ 'rounded-r-none': file }\"\n      />\n      <input\n        ref=\"root\"\n        type=\"file\"\n        class=\"absolute top-0 left-0 w-full h-full opacity-0 outline-none cursor-pointer -z-1\"\n        :accept=\"accept\"\n        @input=\"upload\"\n      >\n    </label>\n    <div v-if=\"file\">\n      <span\n        class=\"inline-flex px-4 py-2 justify-center bg-gray-100 dark:bg-gray-800 border-gray-200 dark:border-gray-700 border rounded-r\"\n      >\n        {{ file.name }}\n      </span>\n    </div>\n  </div>\n</template>\n"]},"metadata":{},"sourceType":"module"}