{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"text-2xl text-gray-500 dark:text-gray-400 mb-12\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" Available screens:\");\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" , \");\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createBlock($setup[\"TitledSection\"], {\n    last: \"\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"h1\", _hoisted_1, [_hoisted_2, _hoisted_3, (_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.screens, (screen, index) => {\n      return _openBlock(), _createElementBlock(_Fragment, {\n        key: screen.path\n      }, [_createVNode(_component_router_link, {\n        to: screen.path,\n        class: \"text-blue-600\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(screen.title), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), index + 1 < $setup.screens.length ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 0\n      }, [_hoisted_4], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n    }), 64 /* STABLE_FRAGMENT */))])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;EA4BQA,KAAK,EAAC;AAAiD;iDAAC,qBACxC;gCAAAC,oBAAM;iDAKsB,KAAG;;;uBAPrDC,aAUiBC;IAVDC,IAAI,EAAJ;EAAI;sBAClB,MAQK,CARLH,oBAQK,MARLI,UAQK,eAPeC,UAAM,iBACxBC,oBAKWC,6BALyBL,cAAO,GAAzBM,MAAM,EAAEC,KAAK;;aAAoBD,MAAM,CAACE;UACxDC,aAEcC;QAFAC,EAAE,EAAEL,MAAM,CAACE,IAAI;QAAEX,KAAK,EAAC;;0BACnC,MAAkB,mCAAfS,MAAM,CAACM,KAAK;;mDAEDL,KAAK,OAAOP,cAAO,CAACa,MAAM,kBAA1CT,oBAA0DC;QAAAS;MAAA","names":["class","_createElementVNode","_createBlock","$setup","last","_hoisted_1","_hoisted_3","_createElementBlock","_Fragment","screen","index","path","_createVNode","_component_router_link","to","title","length","key"],"sourceRoot":"","sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/BottomOtherPagesSection.vue"],"sourcesContent":["<script setup>\nimport { useRouter } from \"vue-router\";\nimport TitledSection from \"@/components/TitledSection.vue\";\n\nconst router = useRouter();\n\nconst routes = router.getRoutes();\n\nconst screens = [];\n\nfor (const routeIndex in routes) {\n  const path = routes[routeIndex].path;\n  const title =\n    routes[routeIndex].meta && routes[routeIndex].meta.title\n      ? routes[routeIndex].meta.title\n      : null;\n\n  if (title) {\n    screens.push({\n      path,\n      title,\n    });\n  }\n}\n</script>\n\n<template>\n  <titled-section last>\n    <h1 class=\"text-2xl text-gray-500 dark:text-gray-400 mb-12\">\n      Available screens:<br />\n      <template v-for=\"(screen, index) in screens\" :key=\"screen.path\">\n        <router-link :to=\"screen.path\" class=\"text-blue-600\">\n          {{ screen.title }}\n        </router-link>\n        <template v-if=\"index + 1 < screens.length\"> , </template>\n      </template>\n    </h1>\n  </titled-section>\n</template>\n"]},"metadata":{},"sourceType":"module"}