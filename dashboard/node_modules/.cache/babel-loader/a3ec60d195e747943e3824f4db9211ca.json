{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nconst _hoisted_2 = [\"d\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"span\", {\n    class: _normalizeClass($setup.spanClass)\n  }, [(_openBlock(), _createElementBlock(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    width: $props.size,\n    height: $props.size,\n    class: \"inline-block\"\n  }, [_createElementVNode(\"path\", {\n    fill: \"currentColor\",\n    d: $props.path\n  }, null, 8 /* PROPS */, _hoisted_2)], 8 /* PROPS */, _hoisted_1))], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$setup","spanClass","viewBox","width","$props","size","height","_createElementVNode","fill","d","path"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/Icon.vue"],"sourcesContent":["<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  path: {\n    type: String,\n    required: true\n  },\n  w: {\n    type: String,\n    default: 'w-6'\n  },\n  h: {\n    type: String,\n    default: 'h-6'\n  },\n  size: {\n    type: [String, Number],\n    default: 16\n  }\n})\n\nconst spanClass = computed(() => `inline-flex justify-center items-center ${props.w} ${props.h}`)\n</script>\n\n<template>\n  <span :class=\"spanClass\">\n    <svg\n      viewBox=\"0 0 24 24\"\n      :width=\"size\"\n      :height=\"size\"\n      class=\"inline-block\"\n    >\n      <path\n        fill=\"currentColor\"\n        :d=\"path\"\n      />\n    </svg>\n  </span>\n</template>\n"],"mappings":";;;;uBA0BEA,mBAAA,CAYO;IAZAC,KAAK,EAAAC,eAAA,CAAEC,MAAA,CAAAC,SAAS;qBACrBJ,mBAAA,CAUM;IATJK,OAAO,EAAC,WAAW;IAClBC,KAAK,EAAEC,MAAA,CAAAC,IAAI;IACXC,MAAM,EAAEF,MAAA,CAAAC,IAAI;IACbP,KAAK,EAAC;MAENS,mBAAA,CAGE;IAFAC,IAAI,EAAC,cAAc;IAClBC,CAAC,EAAEL,MAAA,CAAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}