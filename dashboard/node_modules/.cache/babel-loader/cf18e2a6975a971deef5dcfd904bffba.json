{"ast":null,"code":"import { ref, computed, useSlots } from 'vue';\nimport { useStore } from 'vuex';\nimport { mdiClose } from '@mdi/js';\nimport { colorsBg, colorsBorders, colorsOutline } from '@/colors.js';\nimport Level from '@/components/Level.vue';\nimport Icon from '@/components/Icon.vue';\nimport JbButton from '@/components/JbButton.vue';\nexport default {\n  props: {\n    icon: {\n      type: String,\n      default: null\n    },\n    outline: Boolean,\n    color: {\n      type: String,\n      required: true\n    }\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const componentClass = computed(() => props.outline ? colorsOutline[props.color] : [colorsBg[props.color], colorsBorders[props.color]]);\n    const isDismissed = ref(false);\n    const dismiss = () => {\n      isDismissed.value = true;\n    };\n    const slots = useSlots();\n    const hasRightSlot = computed(() => slots.right);\n    const store = useStore();\n    const darkMode = computed(() => store.state.darkMode);\n    const __returned__ = {\n      props,\n      componentClass,\n      isDismissed,\n      dismiss,\n      slots,\n      hasRightSlot,\n      store,\n      darkMode,\n      ref,\n      computed,\n      useSlots,\n      useStore,\n      mdiClose,\n      colorsBg,\n      colorsBorders,\n      colorsOutline,\n      Level,\n      Icon,\n      JbButton\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AACA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,KAAK;AAC7C,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,QAAQ,QAAQ,SAAS;AAClC,SAASC,QAAQ,EAAEC,aAAa,EAAEC,aAAa,QAAQ,aAAa;AACpE,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,QAAQ,MAAM,2BAA2B;;;;;;;;;;;;;;;;;;IAchD,MAAMC,cAAc,GAAGV,QAAQ,CAAC,MAAMW,KAAK,CAACC,OAAO,GAC/CN,aAAa,CAACK,KAAK,CAACE,KAAK,CAAC,GAC1B,CAACT,QAAQ,CAACO,KAAK,CAACE,KAAK,CAAC,EAAER,aAAa,CAACM,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;IAExD,MAAMC,WAAW,GAAGf,GAAG,CAAC,KAAK,CAAC;IAE9B,MAAMgB,OAAO,GAAGA,MAAM;MACpBD,WAAW,CAACE,KAAK,GAAG,IAAI;IAC1B,CAAC;IAED,MAAMC,KAAK,GAAGhB,QAAQ,CAAC,CAAC;IAExB,MAAMiB,YAAY,GAAGlB,QAAQ,CAAC,MAAMiB,KAAK,CAACE,KAAK,CAAC;IAEhD,MAAMC,KAAK,GAAGlB,QAAQ,CAAC,CAAC;IAExB,MAAMmB,QAAQ,GAAGrB,QAAQ,CAAC,MAAMoB,KAAK,CAACE,KAAK,CAACD,QAAQ,CAAC","names":["ref","computed","useSlots","useStore","mdiClose","colorsBg","colorsBorders","colorsOutline","Level","Icon","JbButton","componentClass","props","outline","color","isDismissed","dismiss","value","slots","hasRightSlot","right","store","darkMode","state"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/Notification.vue"],"sourcesContent":["<script setup>\nimport { ref, computed, useSlots } from 'vue'\nimport { useStore } from 'vuex'\nimport { mdiClose } from '@mdi/js'\nimport { colorsBg, colorsBorders, colorsOutline } from '@/colors.js'\nimport Level from '@/components/Level.vue'\nimport Icon from '@/components/Icon.vue'\nimport JbButton from '@/components/JbButton.vue'\n\nconst props = defineProps({\n  icon: {\n    type: String,\n    default: null\n  },\n  outline: Boolean,\n  color: {\n    type: String,\n    required: true\n  }\n})\n\nconst componentClass = computed(() => props.outline\n  ? colorsOutline[props.color]\n  : [colorsBg[props.color], colorsBorders[props.color]])\n\nconst isDismissed = ref(false)\n\nconst dismiss = () => {\n  isDismissed.value = true\n}\n\nconst slots = useSlots()\n\nconst hasRightSlot = computed(() => slots.right)\n\nconst store = useStore()\n\nconst darkMode = computed(() => store.state.darkMode)\n</script>\n\n<template>\n  <div\n    v-if=\"!isDismissed\"\n    :class=\"componentClass\"\n    class=\"px-3 py-6 md:py-3 mx-6 md:mx-0 mb-6 last:mb-0 border rounded transition-colors duration-150\"\n  >\n    <level>\n      <div class=\"flex flex-col md:flex-row items-center\">\n        <icon\n          v-if=\"icon\"\n          :path=\"icon\"\n          w=\"w-10 md:w-5\"\n          h=\"h-10 md:h-5\"\n          size=\"24\"\n          class=\"md:mr-2\"\n        />\n        <span class=\"text-center md:text-left\"><slot /></span>\n      </div>\n      <slot\n        v-if=\"hasRightSlot\"\n        name=\"right\"\n      />\n      <jb-button\n        v-else\n        :icon=\"mdiClose\"\n        :outline=\"outline || (darkMode && ['white', 'light'].indexOf(color) < 0)\"\n        small\n        @click=\"dismiss\"\n      />\n    </level>\n  </div>\n</template>\n"]},"metadata":{},"sourceType":"module"}