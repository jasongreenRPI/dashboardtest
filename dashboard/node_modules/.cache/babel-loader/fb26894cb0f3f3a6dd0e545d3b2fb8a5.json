{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createBlock as _createBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex items-center space-x-4\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Job Posting Dashboard\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"grid grid-cols-1 gap-6 lg:grid-cols-3 mb-6\"\n};\nconst _hoisted_5 = {\n  class: \"grid grid-cols-1 xl:grid-cols-2 gap-6 mb-6\"\n};\nconst _hoisted_6 = {\n  class: \"flex flex-col justify-between\"\n};\nconst _hoisted_7 = {\n  class: \"flex flex-col justify-between\"\n};\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\" Click on applicants to view the interview prep doc or the analytics sheet. \");\nexport function render(_ctx, _cache) {\n  const _component_title_bar = _resolveComponent(\"title-bar\");\n  const _component_hero_bar = _resolveComponent(\"hero-bar\");\n  const _component_card_widget = _resolveComponent(\"card-widget\");\n  const _component_card_transaction_bar = _resolveComponent(\"card-transaction-bar\");\n  const _component_card_client_bar = _resolveComponent(\"card-client-bar\");\n  const _component_title_sub_bar = _resolveComponent(\"title-sub-bar\");\n  const _component_line_chart = _resolveComponent(\"line-chart\");\n  const _component_card_component = _resolveComponent(\"card-component\");\n  const _component_notification = _resolveComponent(\"notification\");\n  const _component_clients_table = _resolveComponent(\"clients-table\");\n  const _component_main_section = _resolveComponent(\"main-section\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_title_bar, {\n    \"title-stack\": _ctx.titleStack\n  }, null, 8 /* PROPS */, [\"title-stack\"]), _createVNode(_component_hero_bar, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _ctx.organizationJobs.length ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n      key: 0,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedJob = $event),\n      class: \"rounded-lg border-gray-300 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-300\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.organizationJobs, job => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: job.id,\n        value: job\n      }, _toDisplayString(job.id), 9 /* TEXT, PROPS */, _hoisted_3);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */)), [[_vModelSelect, _ctx.selectedJob]]) : _createCommentVNode(\"v-if\", true)])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_main_section, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_card_widget, {\n      trend: \"12%\",\n      \"trend-type\": \"up\",\n      color: \"text-emerald-500\",\n      icon: _ctx.mdiAccountMultiple,\n      number: _ctx.selectedJobApplicationsCount,\n      label: 'Applications for ' + (_ctx.selectedJob?.name || 'All Jobs')\n    }, null, 8 /* PROPS */, [\"icon\", \"number\", \"label\"]), _createVNode(_component_card_widget, {\n      trend: \"12%\",\n      \"trend-type\": \"down\",\n      color: \"text-blue-500\",\n      icon: _ctx.mdiCartOutline,\n      number: 7770,\n      prefix: \"$\",\n      label: \"Sales\"\n    }, null, 8 /* PROPS */, [\"icon\"]), _createVNode(_component_card_widget, {\n      trend: \"Overflow\",\n      \"trend-type\": \"alert\",\n      color: \"text-red-500\",\n      icon: _ctx.mdiChartTimelineVariant,\n      number: 256,\n      suffix: \"%\",\n      label: \"Performance\"\n    }, null, 8 /* PROPS */, [\"icon\"])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.transactionBarItems, (transaction, index) => {\n      return _openBlock(), _createBlock(_component_card_transaction_bar, {\n        key: index,\n        amount: transaction.amount,\n        date: transaction.date,\n        business: transaction.business,\n        type: transaction.type,\n        name: transaction.name,\n        account: transaction.account\n      }, null, 8 /* PROPS */, [\"amount\", \"date\", \"business\", \"type\", \"name\", \"account\"]);\n    }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.clientBarItems, client => {\n      return _openBlock(), _createBlock(_component_card_client_bar, {\n        key: client.id,\n        name: client.name,\n        login: client.login,\n        date: client.created,\n        progress: client.progress\n      }, null, 8 /* PROPS */, [\"name\", \"login\", \"date\", \"progress\"]);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createVNode(_component_title_sub_bar, {\n      icon: _ctx.mdiChartPie,\n      title: \"Trends overview\"\n    }, null, 8 /* PROPS */, [\"icon\"]), _createVNode(_component_card_component, {\n      title: \"Performance\",\n      icon: _ctx.mdiFinance,\n      \"header-icon\": _ctx.mdiReload,\n      class: \"mb-6\",\n      onHeaderIconClick: _ctx.fillChartData\n    }, {\n      default: _withCtx(() => [_ctx.chartData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_line_chart, {\n        data: _ctx.chartData,\n        class: \"h-96\"\n      }, null, 8 /* PROPS */, [\"data\"])])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"icon\", \"header-icon\", \"onHeaderIconClick\"]), _createVNode(_component_title_sub_bar, {\n      icon: _ctx.mdiAccountMultiple,\n      title: `Applications for ${_ctx.selectedOrganizationName}`\n    }, null, 8 /* PROPS */, [\"icon\", \"title\"]), _createVNode(_component_notification, {\n      color: \"info\",\n      icon: _ctx.mdiMonitorCellphone\n    }, {\n      default: _withCtx(() => [_hoisted_9]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"icon\"]), _createVNode(_component_card_component, {\n      icon: _ctx.mdiMonitorCellphone,\n      title: \"Applicants\",\n      \"has-table\": \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_clients_table, {\n        checkable: false,\n        items: _ctx.selectedJobApplications\n      }, null, 8 /* PROPS */, [\"items\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"icon\"])]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createVNode","_component_title_bar","_ctx","titleStack","_component_hero_bar","_hoisted_1","_hoisted_2","organizationJobs","length","_createElementBlock","selectedJob","$event","_Fragment","_renderList","job","key","id","value","_hoisted_3","_component_main_section","_hoisted_4","_component_card_widget","trend","color","icon","mdiAccountMultiple","number","selectedJobApplicationsCount","label","name","mdiCartOutline","prefix","mdiChartTimelineVariant","suffix","_hoisted_5","_hoisted_6","transactionBarItems","transaction","index","_createBlock","_component_card_transaction_bar","amount","date","business","type","account","_hoisted_7","clientBarItems","client","_component_card_client_bar","login","created","progress","_component_title_sub_bar","mdiChartPie","title","_component_card_component","mdiFinance","mdiReload","onHeaderIconClick","fillChartData","chartData","_hoisted_8","_component_line_chart","data","selectedOrganizationName","_component_notification","mdiMonitorCellphone","_component_clients_table","checkable","items","selectedJobApplications"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/views/Home.vue"],"sourcesContent":["<script setup>\nimport { computed, ref, onMounted, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n  mdiAccountMultiple,\n  mdiCartOutline,\n  mdiChartTimelineVariant,\n  mdiFinance,\n  mdiMonitorCellphone,\n  mdiReload,\n  mdiChartPie,\n} from \"@mdi/js\";\nimport * as chartConfig from \"@/components/Charts/chart.config.js\";\nimport LineChart from \"@/components/Charts/LineChart.vue\";\nimport MainSection from \"@/components/MainSection.vue\";\nimport TitleBar from \"@/components/TitleBar.vue\";\nimport HeroBar from \"@/components/HeroBar.vue\";\nimport CardWidget from \"@/components/CardWidget.vue\";\nimport CardComponent from \"@/components/CardComponent.vue\";\nimport ClientsTable from \"@/components/ClientsTable.vue\";\nimport Notification from \"@/components/Notification.vue\";\nimport CardTransactionBar from \"@/components/CardTransactionBar.vue\";\nimport CardClientBar from \"@/components/CardClientBar.vue\";\nimport TitleSubBar from \"@/components/TitleSubBar.vue\";\n\nconst store = useStore();\n\nconst titleStack = computed(() => {\n  const orgName = store.getters.selectedOrganization?.name || \"\";\n  return [\"Admin\", \"Dashboard\", orgName];\n});\n\nconst clientBarItems = computed(() => store.state.clients?.slice(0, 3) || []);\n\nconst transactionBarItems = computed(\n  () => store.state.history?.slice(0, 3) || []\n);\n\nconst chartData = ref(null);\n\nconst fillChartData = () => {\n  chartData.value = chartConfig.sampleChartData();\n};\n\nconst selectedOrganization = computed(\n  () => store.getters.selectedOrganization || {}\n);\n\nconst organizationJobs = computed(() => selectedOrganization.value?.jobs || []);\n\nconst selectedJob = ref(null);\n\nconst selectedJobApplications = computed(() => {\n  if (!selectedJob.value) return [];\n  return selectedJob.value.applications || [];\n});\n\nconst selectedJobApplicationsCount = computed(\n  () => selectedJobApplications.value.length\n);\n\nconst selectedOrganizationName = computed(\n  () => selectedOrganization.value?.name || \"No Organization Selected\"\n);\n\nconst currentPlan = computed(()=>)\n// Initialize data\nonMounted(() => {\n  fillChartData();\n  // Make sure organizations are initialized\n  if (!store.state.userOrganizations.length) {\n    store.dispatch(\"initializeOrganizations\");\n  }\n  // Fetch clients and history if not already loaded\n  if (!store.state.clients.length) {\n    store.dispatch(\"fetch\", \"clients\");\n  }\n  if (!store.state.history.length) {\n    store.dispatch(\"fetch\", \"history\");\n  }\n  // Set first job as default when component mounts or organization changes\n  if (organizationJobs.value.length > 0) {\n    selectedJob.value = organizationJobs.value[0];\n  }\n});\n\n// Watch for organization changes to update selected job\nwatch(\n  () => selectedOrganization.value,\n  (newOrg) => {\n    if (newOrg?.jobs?.length > 0) {\n      selectedJob.value = newOrg.jobs[0];\n    } else {\n      selectedJob.value = null;\n    }\n  }\n);\n</script>\n\n<!-- to-do make the card widgets dynamic -->\n\n<template>\n  <title-bar :title-stack=\"titleStack\" />\n  <hero-bar>\n    <div class=\"flex items-center space-x-4\">\n      <span>Job Posting Dashboard</span>\n      <select\n        v-if=\"organizationJobs.length\"\n        v-model=\"selectedJob\"\n        class=\"rounded-lg border-gray-300 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-300\"\n      >\n        <option v-for=\"job in organizationJobs\" :key=\"job.id\" :value=\"job\">\n          {{ job.id }}\n        </option>\n      </select>\n    </div>\n  </hero-bar>\n  <main-section>\n    <div class=\"grid grid-cols-1 gap-6 lg:grid-cols-3 mb-6\">\n      <card-widget\n        trend=\"12%\"\n        trend-type=\"up\"\n        color=\"text-emerald-500\"\n        :icon=\"mdiAccountMultiple\"\n        :number=\"selectedJobApplicationsCount\"\n        :label=\"'Applications for ' + (selectedJob?.name || 'All Jobs')\"\n      />\n      <card-widget\n        trend=\"12%\"\n        trend-type=\"down\"\n        color=\"text-blue-500\"\n        :icon=\"mdiCartOutline\"\n        :number=\"7770\"\n        prefix=\"$\"\n        label=\"Sales\"\n      />\n      <card-widget\n        trend=\"Overflow\"\n        trend-type=\"alert\"\n        color=\"text-red-500\"\n        :icon=\"mdiChartTimelineVariant\"\n        :number=\"256\"\n        suffix=\"%\"\n        label=\"Performance\"\n      />\n    </div>\n\n    <div class=\"grid grid-cols-1 xl:grid-cols-2 gap-6 mb-6\">\n      <div class=\"flex flex-col justify-between\">\n        <card-transaction-bar\n          v-for=\"(transaction, index) in transactionBarItems\"\n          :key=\"index\"\n          :amount=\"transaction.amount\"\n          :date=\"transaction.date\"\n          :business=\"transaction.business\"\n          :type=\"transaction.type\"\n          :name=\"transaction.name\"\n          :account=\"transaction.account\"\n        />\n      </div>\n      <div class=\"flex flex-col justify-between\">\n        <card-client-bar\n          v-for=\"client in clientBarItems\"\n          :key=\"client.id\"\n          :name=\"client.name\"\n          :login=\"client.login\"\n          :date=\"client.created\"\n          :progress=\"client.progress\"\n        />\n      </div>\n    </div>\n\n    <title-sub-bar :icon=\"mdiChartPie\" title=\"Trends overview\" />\n\n    <card-component\n      title=\"Performance\"\n      :icon=\"mdiFinance\"\n      :header-icon=\"mdiReload\"\n      class=\"mb-6\"\n      @header-icon-click=\"fillChartData\"\n    >\n      <div v-if=\"chartData\">\n        <line-chart :data=\"chartData\" class=\"h-96\" />\n      </div>\n    </card-component>\n\n    <title-sub-bar\n      :icon=\"mdiAccountMultiple\"\n      :title=\"`Applications for ${selectedOrganizationName}`\"\n    />\n\n    <notification color=\"info\" :icon=\"mdiMonitorCellphone\">\n      Click on applicants to view the interview prep doc or the analytics sheet.\n    </notification>\n\n    <card-component :icon=\"mdiMonitorCellphone\" title=\"Applicants\" has-table>\n      <clients-table :checkable=\"false\" :items=\"selectedJobApplications\" />\n    </card-component>\n  </main-section>\n</template>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}