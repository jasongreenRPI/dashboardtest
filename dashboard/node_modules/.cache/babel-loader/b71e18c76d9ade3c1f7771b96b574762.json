{"ast":null,"code":"const sectionBgBase = \"bg-gradient-to-tr\";\nexport const sectionBgLogin = `${sectionBgBase} from-purple-400 via-pink-500 to-red-500`;\nexport const sectionBgLoginDark = `${sectionBgBase} from-purple-900 via-pink-900 to-red-900`;\nexport const sectionBgError = `${sectionBgBase} from-pink-400 via-red-500 to-yellow-500`;\nexport const sectionBgErrorDark = `${sectionBgBase} from-pink-900 via-red-900 to-yellow-900`;\nexport const colorsBg = {\n  white: \"bg-white text-black\",\n  light: \"bg-gray-100 text-black\",\n  success: \"bg-emerald-600 text-white\",\n  danger: \"bg-red-600 text-white\",\n  warning: \"bg-yellow-600 text-white\",\n  info: \"bg-blue-600 text-white\"\n};\nexport const colorsBgHover = {\n  white: \"hover:bg-gray-50\",\n  light: \"hover:bg-gray-200\",\n  success: \"hover:bg-emerald-700\",\n  danger: \"hover:bg-red-700\",\n  warning: \"hover:bg-yellow-700\",\n  info: \"hover:bg-blue-700\"\n};\nexport const colorsBorders = {\n  white: \"border-gray-300\",\n  light: \"border-gray-200 dark:border-gray-400\",\n  success: \"border-emerald-700\",\n  danger: \"border-red-700\",\n  warning: \"border-yellow-700\",\n  info: \"border-blue-700\"\n};\nexport const colorsText = {\n  white: \"text-black dark:text-gray-100\",\n  light: \"text-gray-700 dark:text-gray-400\",\n  success: \"text-emerald-600\",\n  danger: \"text-red-600\",\n  warning: \"text-yellow-600\",\n  info: \"text-blue-600\"\n};\nexport const colorsOutline = {\n  white: [colorsText.white, colorsBorders.white],\n  light: [colorsText.light, colorsBorders.light],\n  success: [colorsText.success, colorsBorders.success],\n  danger: [colorsText.danger, colorsBorders.danger],\n  warning: [colorsText.warning, colorsBorders.warning],\n  info: [colorsText.info, colorsBorders.info]\n};\nexport const colorsOutlineHover = {\n  white: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:text-gray-900\",\n  light: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:text-gray-900\",\n  success: \"hover:bg-emerald-700 hover:text-white\",\n  danger: \"hover:bg-red-700 hover:text-white\",\n  warning: \"hover:bg-yellow-700 hover:text-white\",\n  info: \"hover:bg-blue-700 hover:text-white\"\n};\nexport const getButtonColor = (color, isOutlined, hasHover) => {\n  const base = [isOutlined ? colorsText[color] : colorsBg[color], colorsBorders[color]];\n  if (hasHover) {\n    base.push(isOutlined ? colorsOutlineHover[color] : colorsBgHover[color]);\n  }\n  return base;\n};","map":{"version":3,"names":["sectionBgBase","sectionBgLogin","sectionBgLoginDark","sectionBgError","sectionBgErrorDark","colorsBg","white","light","success","danger","warning","info","colorsBgHover","colorsBorders","colorsText","colorsOutline","colorsOutlineHover","getButtonColor","color","isOutlined","hasHover","base","push"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/colors.js"],"sourcesContent":["const sectionBgBase = \"bg-gradient-to-tr\";\nexport const sectionBgLogin = `${sectionBgBase} from-purple-400 via-pink-500 to-red-500`;\nexport const sectionBgLoginDark = `${sectionBgBase} from-purple-900 via-pink-900 to-red-900`;\nexport const sectionBgError = `${sectionBgBase} from-pink-400 via-red-500 to-yellow-500`;\nexport const sectionBgErrorDark = `${sectionBgBase} from-pink-900 via-red-900 to-yellow-900`;\n\nexport const colorsBg = {\n  white: \"bg-white text-black\",\n  light: \"bg-gray-100 text-black\",\n  success: \"bg-emerald-600 text-white\",\n  danger: \"bg-red-600 text-white\",\n  warning: \"bg-yellow-600 text-white\",\n  info: \"bg-blue-600 text-white\",\n};\n\nexport const colorsBgHover = {\n  white: \"hover:bg-gray-50\",\n  light: \"hover:bg-gray-200\",\n  success: \"hover:bg-emerald-700\",\n  danger: \"hover:bg-red-700\",\n  warning: \"hover:bg-yellow-700\",\n  info: \"hover:bg-blue-700\",\n};\n\nexport const colorsBorders = {\n  white: \"border-gray-300\",\n  light: \"border-gray-200 dark:border-gray-400\",\n  success: \"border-emerald-700\",\n  danger: \"border-red-700\",\n  warning: \"border-yellow-700\",\n  info: \"border-blue-700\",\n};\n\nexport const colorsText = {\n  white: \"text-black dark:text-gray-100\",\n  light: \"text-gray-700 dark:text-gray-400\",\n  success: \"text-emerald-600\",\n  danger: \"text-red-600\",\n  warning: \"text-yellow-600\",\n  info: \"text-blue-600\",\n};\n\nexport const colorsOutline = {\n  white: [colorsText.white, colorsBorders.white],\n  light: [colorsText.light, colorsBorders.light],\n  success: [colorsText.success, colorsBorders.success],\n  danger: [colorsText.danger, colorsBorders.danger],\n  warning: [colorsText.warning, colorsBorders.warning],\n  info: [colorsText.info, colorsBorders.info],\n};\n\nexport const colorsOutlineHover = {\n  white: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:text-gray-900\",\n  light: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:text-gray-900\",\n  success: \"hover:bg-emerald-700 hover:text-white\",\n  danger: \"hover:bg-red-700 hover:text-white\",\n  warning: \"hover:bg-yellow-700 hover:text-white\",\n  info: \"hover:bg-blue-700 hover:text-white\",\n};\n\nexport const getButtonColor = (color, isOutlined, hasHover) => {\n  const base = [\n    isOutlined ? colorsText[color] : colorsBg[color],\n    colorsBorders[color],\n  ];\n\n  if (hasHover) {\n    base.push(isOutlined ? colorsOutlineHover[color] : colorsBgHover[color]);\n  }\n\n  return base;\n};\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,mBAAmB;AACzC,OAAO,MAAMC,cAAc,GAAG,GAAGD,aAAa,0CAA0C;AACxF,OAAO,MAAME,kBAAkB,GAAG,GAAGF,aAAa,0CAA0C;AAC5F,OAAO,MAAMG,cAAc,GAAG,GAAGH,aAAa,0CAA0C;AACxF,OAAO,MAAMI,kBAAkB,GAAG,GAAGJ,aAAa,0CAA0C;AAE5F,OAAO,MAAMK,QAAQ,GAAG;EACtBC,KAAK,EAAE,qBAAqB;EAC5BC,KAAK,EAAE,wBAAwB;EAC/BC,OAAO,EAAE,2BAA2B;EACpCC,MAAM,EAAE,uBAAuB;EAC/BC,OAAO,EAAE,0BAA0B;EACnCC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG;EAC3BN,KAAK,EAAE,kBAAkB;EACzBC,KAAK,EAAE,mBAAmB;EAC1BC,OAAO,EAAE,sBAAsB;EAC/BC,MAAM,EAAE,kBAAkB;EAC1BC,OAAO,EAAE,qBAAqB;EAC9BC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAME,aAAa,GAAG;EAC3BP,KAAK,EAAE,iBAAiB;EACxBC,KAAK,EAAE,sCAAsC;EAC7CC,OAAO,EAAE,oBAAoB;EAC7BC,MAAM,EAAE,gBAAgB;EACxBC,OAAO,EAAE,mBAAmB;EAC5BC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG;EACxBR,KAAK,EAAE,+BAA+B;EACtCC,KAAK,EAAE,kCAAkC;EACzCC,OAAO,EAAE,kBAAkB;EAC3BC,MAAM,EAAE,cAAc;EACtBC,OAAO,EAAE,iBAAiB;EAC1BC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMI,aAAa,GAAG;EAC3BT,KAAK,EAAE,CAACQ,UAAU,CAACR,KAAK,EAAEO,aAAa,CAACP,KAAK,CAAC;EAC9CC,KAAK,EAAE,CAACO,UAAU,CAACP,KAAK,EAAEM,aAAa,CAACN,KAAK,CAAC;EAC9CC,OAAO,EAAE,CAACM,UAAU,CAACN,OAAO,EAAEK,aAAa,CAACL,OAAO,CAAC;EACpDC,MAAM,EAAE,CAACK,UAAU,CAACL,MAAM,EAAEI,aAAa,CAACJ,MAAM,CAAC;EACjDC,OAAO,EAAE,CAACI,UAAU,CAACJ,OAAO,EAAEG,aAAa,CAACH,OAAO,CAAC;EACpDC,IAAI,EAAE,CAACG,UAAU,CAACH,IAAI,EAAEE,aAAa,CAACF,IAAI;AAC5C,CAAC;AAED,OAAO,MAAMK,kBAAkB,GAAG;EAChCV,KAAK,EAAE,gEAAgE;EACvEC,KAAK,EAAE,gEAAgE;EACvEC,OAAO,EAAE,uCAAuC;EAChDC,MAAM,EAAE,mCAAmC;EAC3CC,OAAO,EAAE,sCAAsC;EAC/CC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMM,cAAc,GAAGA,CAACC,KAAK,EAAEC,UAAU,EAAEC,QAAQ,KAAK;EAC7D,MAAMC,IAAI,GAAG,CACXF,UAAU,GAAGL,UAAU,CAACI,KAAK,CAAC,GAAGb,QAAQ,CAACa,KAAK,CAAC,EAChDL,aAAa,CAACK,KAAK,CAAC,CACrB;EAED,IAAIE,QAAQ,EAAE;IACZC,IAAI,CAACC,IAAI,CAACH,UAAU,GAAGH,kBAAkB,CAACE,KAAK,CAAC,GAAGN,aAAa,CAACM,KAAK,CAAC,CAAC;EAC1E;EAEA,OAAOG,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}