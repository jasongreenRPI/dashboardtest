{"ast":null,"code":"import { ref, watch, computed, onMounted } from 'vue';\nimport { Chart, LineElement, PointElement, LineController, LinearScale, CategoryScale, Tooltip } from 'chart.js';\nexport default {\n  props: {\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var props = __props;\n    var root = ref(null);\n    var chart;\n    Chart.register(LineElement, PointElement, LineController, LinearScale, CategoryScale, Tooltip);\n    onMounted(function () {\n      chart = new Chart(root.value, {\n        type: 'line',\n        data: props.data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              display: false\n            },\n            x: {\n              display: true\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      });\n    });\n    var chartData = computed(function () {\n      return props.data;\n    });\n    watch(chartData, function (data) {\n      if (chart) {\n        chart.data = data;\n        chart.update();\n      }\n    });\n    var __returned__ = {\n      props: props,\n      root: root,\n      chart: chart,\n      chartData: chartData,\n      ref: ref,\n      watch: watch,\n      computed: computed,\n      onMounted: onMounted,\n      Chart: Chart,\n      LineElement: LineElement,\n      PointElement: PointElement,\n      LineController: LineController,\n      LinearScale: LinearScale,\n      CategoryScale: CategoryScale,\n      Tooltip: Tooltip\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AACA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,KAAhD;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,WALF,EAMEC,aANF,EAOEC,OAPF,QAQO,UARP;;;;;;;;;;;;AAiBA,QAAMC,IAAI,GAAGX,GAAG,CAAC,IAAD,CAAhB;AAEA,QAAIY,KAAJ;AAEAR,SAAK,CAACS,QAAN,CAAeR,WAAf,EAA4BC,YAA5B,EAA0CC,cAA1C,EAA0DC,WAA1D,EAAuEC,aAAvE,EAAsFC,OAAtF;AAEAP,aAAS,CAAC,YAAM;AACdS,WAAK,GAAG,IAAIR,KAAJ,CAAUO,IAAI,CAACG,KAAf,EAAsB;AAC5BC,YAAI,EAAE,MADsB;AAE5BC,YAAI,EAAEC,KAAK,CAACD,IAFgB;AAG5BE,eAAO,EAAE;AACPC,oBAAU,EAAE,IADL;AAEPC,6BAAmB,EAAE,KAFd;AAGPC,gBAAM,EAAE;AACNC,aAAC,EAAE;AACDC,qBAAO,EAAE;AADR,aADG;AAINC,aAAC,EAAE;AACDD,qBAAO,EAAE;AADR;AAJG,WAHD;AAWPE,iBAAO,EAAE;AACPC,kBAAM,EAAE;AACNH,qBAAO,EAAE;AADH;AADD;AAXF;AAHmB,OAAtB,CAAR;AAqBD,KAtBQ,CAAT;AAwBA,QAAMI,SAAS,GAAGzB,QAAQ,CAAC;AAAA,aAAMe,KAAK,CAACD,IAAZ;AAAA,KAAD,CAA1B;AAEAf,SAAK,CAAC0B,SAAD,EAAY,cAAI,EAAI;AACvB,UAAIf,KAAJ,EAAW;AACTA,aAAK,CAACI,IAAN,GAAaA,IAAb;AACAJ,aAAK,CAACgB,MAAN;AACD;AACF,KALI,CAAL","names":["ref","watch","computed","onMounted","Chart","LineElement","PointElement","LineController","LinearScale","CategoryScale","Tooltip","root","chart","register","value","type","data","props","options","responsive","maintainAspectRatio","scales","y","display","x","plugins","legend","chartData","update"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/Charts/LineChart.vue"],"sourcesContent":["<script setup>\nimport { ref, watch, computed, onMounted } from 'vue'\nimport {\n  Chart,\n  LineElement,\n  PointElement,\n  LineController,\n  LinearScale,\n  CategoryScale,\n  Tooltip\n} from 'chart.js'\n\nconst props = defineProps({\n  data: {\n    type: Object,\n    required: true\n  }\n})\n\nconst root = ref(null)\n\nlet chart\n\nChart.register(LineElement, PointElement, LineController, LinearScale, CategoryScale, Tooltip)\n\nonMounted(() => {\n  chart = new Chart(root.value, {\n    type: 'line',\n    data: props.data,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          display: false\n        },\n        x: {\n          display: true\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    }\n  })\n})\n\nconst chartData = computed(() => props.data)\n\nwatch(chartData, data => {\n  if (chart) {\n    chart.data = data\n    chart.update()\n  }\n})\n</script>\n\n<template>\n  <canvas ref=\"root\" />\n</template>\n"]},"metadata":{},"sourceType":"module"}