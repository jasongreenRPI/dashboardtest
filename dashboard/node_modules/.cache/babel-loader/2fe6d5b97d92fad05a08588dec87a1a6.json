{"ast":null,"code":"import { useStore } from \"vuex\";\nimport { computed } from \"vue\";\nexport default {\n  props: {\n    href: {\n      type: String,\n      default: null\n    },\n    to: {\n      type: String,\n      default: null\n    },\n    type: {\n      type: String,\n      default: \"flex\"\n    },\n    activeColor: {\n      type: String,\n      default: null\n    },\n    hasDivider: Boolean,\n    isDesktopIconOnly: Boolean,\n    dropdown: Boolean,\n    active: Boolean,\n    class: {\n      type: [String, Object],\n      default: \"\"\n    }\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const is = computed(() => {\n      if (props.href) {\n        return \"a\";\n      }\n      if (props.to) {\n        return \"router-link\";\n      }\n      return \"div\";\n    });\n    const store = useStore();\n    const componentClass = computed(() => {\n      const activeColor = props.activeColor ?? `${store.state.navBarItemLabelActiveColorStyle} dark:text-gray-400`;\n      const base = [props.type, \"items-center\", \"grow-0\", \"shrink-0\", \"relative\", \"cursor-pointer\", props.active ? activeColor : `${store.state.navBarItemLabelStyle} dark:text-white dark:hover:text-gray-400 ${store.state.navBarItemLabelHoverStyle}`];\n      if (props.type === \"block\") {\n        base.push(\"lg:flex\");\n      }\n      if (!props.dropdown) {\n        base.push(\"py-2\", \"px-3\");\n      } else {\n        base.push(\"p-0\", \"lg:py-2\", \"lg:px-3\");\n      }\n      if (props.hasDivider) {\n        base.push(\"lg:border-r\", store.state.lightBorderStyle, \"lg:dark:border-gray-800\");\n      }\n      if (props.isDesktopIconOnly) {\n        base.push(\"lg:w-16\", \"lg:justify-center\");\n      }\n      if (props.class) {\n        base.push(props.class);\n      }\n      return base;\n    });\n    const activeClass = computed(() => {\n      return is.value === \"router-link\" ? props.activeColor : null;\n    });\n    const __returned__ = {\n      props,\n      is,\n      store,\n      componentClass,\n      activeClass,\n      useStore,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useStore","computed","is","props","href","to","store","componentClass","activeColor","state","navBarItemLabelActiveColorStyle","base","type","active","navBarItemLabelStyle","navBarItemLabelHoverStyle","push","dropdown","hasDivider","lightBorderStyle","isDesktopIconOnly","class","activeClass","value"],"sources":["/Users/jasongreenberg/Desktop/dashboard copy/vue-admin-dashboard/src/components/NavBarItem.vue"],"sourcesContent":["<script setup>\nimport { useStore } from \"vuex\";\nimport { computed } from \"vue\";\n\nconst props = defineProps({\n  href: {\n    type: String,\n    default: null,\n  },\n  to: {\n    type: String,\n    default: null,\n  },\n  type: {\n    type: String,\n    default: \"flex\",\n  },\n  activeColor: {\n    type: String,\n    default: null,\n  },\n  hasDivider: Boolean,\n  isDesktopIconOnly: Boolean,\n  dropdown: Boolean,\n  active: Boolean,\n  class: {\n    type: [String, Object],\n    default: \"\",\n  },\n});\n\nconst is = computed(() => {\n  if (props.href) {\n    return \"a\";\n  }\n\n  if (props.to) {\n    return \"router-link\";\n  }\n\n  return \"div\";\n});\n\nconst store = useStore();\n\nconst componentClass = computed(() => {\n  const activeColor =\n    props.activeColor ??\n    `${store.state.navBarItemLabelActiveColorStyle} dark:text-gray-400`;\n\n  const base = [\n    props.type,\n    \"items-center\",\n    \"grow-0\",\n    \"shrink-0\",\n    \"relative\",\n    \"cursor-pointer\",\n    props.active\n      ? activeColor\n      : `${store.state.navBarItemLabelStyle} dark:text-white dark:hover:text-gray-400 ${store.state.navBarItemLabelHoverStyle}`,\n  ];\n\n  if (props.type === \"block\") {\n    base.push(\"lg:flex\");\n  }\n\n  if (!props.dropdown) {\n    base.push(\"py-2\", \"px-3\");\n  } else {\n    base.push(\"p-0\", \"lg:py-2\", \"lg:px-3\");\n  }\n\n  if (props.hasDivider) {\n    base.push(\n      \"lg:border-r\",\n      store.state.lightBorderStyle,\n      \"lg:dark:border-gray-800\"\n    );\n  }\n\n  if (props.isDesktopIconOnly) {\n    base.push(\"lg:w-16\", \"lg:justify-center\");\n  }\n\n  if (props.class) {\n    base.push(props.class);\n  }\n\n  return base;\n});\n\nconst activeClass = computed(() => {\n  return is.value === \"router-link\" ? props.activeColor : null;\n});\n</script>\n\n<template>\n  <component\n    :is=\"is\"\n    :class=\"componentClass\"\n    :to=\"to\"\n    :href=\"href\"\n    :exact-active-class=\"activeClass\"\n  >\n    <slot />\n  </component>\n</template>\n"],"mappings":"AACA,SAASA,QAAQ,QAAQ,MAAM;AAC/B,SAASC,QAAQ,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6B9B,MAAMC,EAAE,GAAGD,QAAQ,CAAC,MAAM;MACxB,IAAIE,KAAK,CAACC,IAAI,EAAE;QACd,OAAO,GAAG;MACZ;MAEA,IAAID,KAAK,CAACE,EAAE,EAAE;QACZ,OAAO,aAAa;MACtB;MAEA,OAAO,KAAK;IACd,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGN,QAAQ,CAAC,CAAC;IAExB,MAAMO,cAAc,GAAGN,QAAQ,CAAC,MAAM;MACpC,MAAMO,WAAW,GACfL,KAAK,CAACK,WAAW,IACjB,GAAGF,KAAK,CAACG,KAAK,CAACC,+BAA+B,qBAAqB;MAErE,MAAMC,IAAI,GAAG,CACXR,KAAK,CAACS,IAAI,EACV,cAAc,EACd,QAAQ,EACR,UAAU,EACV,UAAU,EACV,gBAAgB,EAChBT,KAAK,CAACU,MAAM,GACRL,WAAW,GACX,GAAGF,KAAK,CAACG,KAAK,CAACK,oBAAoB,6CAA6CR,KAAK,CAACG,KAAK,CAACM,yBAAyB,EAAE,CAC5H;MAED,IAAIZ,KAAK,CAACS,IAAI,KAAK,OAAO,EAAE;QAC1BD,IAAI,CAACK,IAAI,CAAC,SAAS,CAAC;MACtB;MAEA,IAAI,CAACb,KAAK,CAACc,QAAQ,EAAE;QACnBN,IAAI,CAACK,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;MAC3B,CAAC,MAAM;QACLL,IAAI,CAACK,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,CAAC;MACxC;MAEA,IAAIb,KAAK,CAACe,UAAU,EAAE;QACpBP,IAAI,CAACK,IAAI,CACP,aAAa,EACbV,KAAK,CAACG,KAAK,CAACU,gBAAgB,EAC5B,yBACF,CAAC;MACH;MAEA,IAAIhB,KAAK,CAACiB,iBAAiB,EAAE;QAC3BT,IAAI,CAACK,IAAI,CAAC,SAAS,EAAE,mBAAmB,CAAC;MAC3C;MAEA,IAAIb,KAAK,CAACkB,KAAK,EAAE;QACfV,IAAI,CAACK,IAAI,CAACb,KAAK,CAACkB,KAAK,CAAC;MACxB;MAEA,OAAOV,IAAI;IACb,CAAC,CAAC;IAEF,MAAMW,WAAW,GAAGrB,QAAQ,CAAC,MAAM;MACjC,OAAOC,EAAE,CAACqB,KAAK,KAAK,aAAa,GAAGpB,KAAK,CAACK,WAAW,GAAG,IAAI;IAC9D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}