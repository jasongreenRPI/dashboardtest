{"ast":null,"code":"import { openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex flex-col md:flex-row items-center\"\n};\nconst _hoisted_2 = {\n  class: \"text-center md:text-left\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return !$setup.isDismissed ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([$setup.componentClass, \"px-3 py-6 md:py-3 mx-6 md:mx-0 mb-6 last:mb-0 border rounded transition-colors duration-150\"])\n  }, [_createVNode($setup[\"Level\"], null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [$props.icon ? (_openBlock(), _createBlock($setup[\"Icon\"], {\n      key: 0,\n      path: $props.icon,\n      w: \"w-10 md:w-5\",\n      h: \"h-10 md:h-5\",\n      size: \"24\",\n      class: \"md:mr-2\"\n    }, null, 8 /* PROPS */, [\"path\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", _hoisted_2, [_renderSlot(_ctx.$slots, \"default\")])]), $setup.hasRightSlot ? _renderSlot(_ctx.$slots, \"right\", {\n      key: 0\n    }) : (_openBlock(), _createBlock($setup[\"JbButton\"], {\n      key: 1,\n      icon: $setup.mdiClose,\n      outline: $props.outline || $setup.darkMode && ['white', 'light'].indexOf($props.color) < 0,\n      small: \"\",\n      onClick: $setup.dismiss\n    }, null, 8 /* PROPS */, [\"icon\", \"outline\"]))]),\n    _: 3 /* FORWARDED */\n  })], 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;EA+CWA,KAAK,EAAC;AAAwC;;EAS3CA,KAAK,EAAC;AAA0B;;UAdnCC,kBAAW,kBADpBC,oBA6BM;;IA3BHF,KAAK,mBAAEC,qBAAc,EAChB,6FAA6F;MAEnGE,aAuBQF;sBAtBN,MAUM,CAVNG,oBAUM,OAVNC,UAUM,GARIC,WAAI,kBADZC,aAOEN;;MALCO,IAAI,EAAEF,WAAI;MACXG,CAAC,EAAC,aAAa;MACfC,CAAC,EAAC,aAAa;MACfC,IAAI,EAAC,IAAI;MACTX,KAAK,EAAC;4EAERI,oBAAsD,QAAtDQ,UAAsD,GAAfC,YAAQC,6BAGzCb,mBAAY,GADpBY,YAGEC;MAAAC;IAAA,oBACFR,aAMEN;;MAJCe,IAAI,EAAEf,eAAQ;MACdgB,OAAO,EAAEX,cAAO,IAAKL,eAAQ,uBAAuBiB,OAAO,CAACZ,YAAK;MAClEa,KAAK,EAAL,EAAK;MACJC,OAAK,EAAEnB","names":["class","$setup","_createElementBlock","_createVNode","_createElementVNode","_hoisted_1","$props","_createBlock","path","w","h","size","_hoisted_2","_renderSlot","_ctx","key","icon","outline","indexOf","small","onClick"],"sourceRoot":"","sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/Notification.vue"],"sourcesContent":["<script setup>\nimport { ref, computed, useSlots } from 'vue'\nimport { useStore } from 'vuex'\nimport { mdiClose } from '@mdi/js'\nimport { colorsBg, colorsBorders, colorsOutline } from '@/colors.js'\nimport Level from '@/components/Level.vue'\nimport Icon from '@/components/Icon.vue'\nimport JbButton from '@/components/JbButton.vue'\n\nconst props = defineProps({\n  icon: {\n    type: String,\n    default: null\n  },\n  outline: Boolean,\n  color: {\n    type: String,\n    required: true\n  }\n})\n\nconst componentClass = computed(() => props.outline\n  ? colorsOutline[props.color]\n  : [colorsBg[props.color], colorsBorders[props.color]])\n\nconst isDismissed = ref(false)\n\nconst dismiss = () => {\n  isDismissed.value = true\n}\n\nconst slots = useSlots()\n\nconst hasRightSlot = computed(() => slots.right)\n\nconst store = useStore()\n\nconst darkMode = computed(() => store.state.darkMode)\n</script>\n\n<template>\n  <div\n    v-if=\"!isDismissed\"\n    :class=\"componentClass\"\n    class=\"px-3 py-6 md:py-3 mx-6 md:mx-0 mb-6 last:mb-0 border rounded transition-colors duration-150\"\n  >\n    <level>\n      <div class=\"flex flex-col md:flex-row items-center\">\n        <icon\n          v-if=\"icon\"\n          :path=\"icon\"\n          w=\"w-10 md:w-5\"\n          h=\"h-10 md:h-5\"\n          size=\"24\"\n          class=\"md:mr-2\"\n        />\n        <span class=\"text-center md:text-left\"><slot /></span>\n      </div>\n      <slot\n        v-if=\"hasRightSlot\"\n        name=\"right\"\n      />\n      <jb-button\n        v-else\n        :icon=\"mdiClose\"\n        :outline=\"outline || (darkMode && ['white', 'light'].indexOf(color) < 0)\"\n        small\n        @click=\"dismiss\"\n      />\n    </level>\n  </div>\n</template>\n"]},"metadata":{},"sourceType":"module"}