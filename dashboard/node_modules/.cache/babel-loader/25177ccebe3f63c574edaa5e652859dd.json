{"ast":null,"code":"import { computed, ref, onMounted, watch, defineAsyncComponent } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { mdiAccountMultiple, mdiCartOutline, mdiChartTimelineVariant, mdiFinance, mdiMonitorCellphone, mdiReload, mdiChartPie } from \"@mdi/js\";\nimport * as chartConfig from \"@/components/Charts/chart.config.js\";\n\n// Lazy load components with loading and error states\n\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const loadingComponent = {\n      template: '<div class=\"loading\">Loading...</div>'\n    };\n    const errorComponent = {\n      template: '<div class=\"error\">Error loading component</div>'\n    };\n    const asyncComponentOptions = {\n      loading: loadingComponent,\n      error: errorComponent,\n      delay: 200,\n      timeout: 5000\n    };\n\n    // Define async components\n    const LineChart = defineAsyncComponent({\n      loader: () => import(\"@/components/Charts/LineChart.vue\"),\n      ...asyncComponentOptions\n    });\n    const MainSection = defineAsyncComponent(() => import(\"@/components/MainSection.vue\"));\n    const TitleBar = defineAsyncComponent(() => import(\"@/components/TitleBar.vue\"));\n    const HeroBar = defineAsyncComponent(() => import(\"@/components/HeroBar.vue\"));\n    const CardWidget = defineAsyncComponent(() => import(\"@/components/CardWidget.vue\"));\n    const CardComponent = defineAsyncComponent(() => import(\"@/components/CardComponent.vue\"));\n    const ClientsTable = defineAsyncComponent(() => import(\"@/components/ClientsTable.vue\"));\n    const Notification = defineAsyncComponent(() => import(\"@/components/Notification.vue\"));\n    const CardTransactionBar = defineAsyncComponent(() => import(\"@/components/CardTransactionBar.vue\"));\n    const CardClientBar = defineAsyncComponent(() => import(\"@/components/CardClientBar.vue\"));\n    const TitleSubBar = defineAsyncComponent(() => import(\"@/components/TitleSubBar.vue\"));\n    const store = useStore();\n    const titleStack = computed(() => {\n      const orgName = store.getters.selectedOrganization?.name || \"\";\n      return [\"Admin\", \"Dashboard\", orgName];\n    });\n    const clientBarItems = computed(() => store.state.clients?.slice(0, 3) || []);\n    const transactionBarItems = computed(() => store.state.history?.slice(0, 3) || []);\n    const chartData = ref(null);\n    const fillChartData = () => {\n      chartData.value = chartConfig.sampleChartData();\n    };\n    const selectedOrganization = computed(() => store.getters.selectedOrganization || {});\n    const organizationJobs = computed(() => selectedOrganization.value?.jobs || []);\n    const selectedJob = ref(null);\n    const selectedJobApplications = computed(() => {\n      if (!selectedJob.value) return [];\n      return selectedJob.value.applications || [];\n    });\n    const selectedJobApplicationsCount = computed(() => selectedJobApplications.value.length);\n    const selectedOrganizationName = computed(() => selectedOrganization.value?.name || \"No Organization Selected\");\n\n    // Initialize data\n    onMounted(() => {\n      fillChartData();\n      // Make sure organizations are initialized\n      if (!store.state.userOrganizations.length) {\n        store.dispatch(\"initializeOrganizations\");\n      }\n      // Fetch clients and history if not already loaded\n      if (!store.state.clients.length) {\n        store.dispatch(\"fetch\", \"clients\");\n      }\n      if (!store.state.history.length) {\n        store.dispatch(\"fetch\", \"history\");\n      }\n      // Set first job as default when component mounts or organization changes\n      if (organizationJobs.value.length > 0) {\n        selectedJob.value = organizationJobs.value[0];\n      }\n    });\n\n    // Watch for organization changes to update selected job\n    watch(() => selectedOrganization.value, newOrg => {\n      if (newOrg?.jobs?.length > 0) {\n        selectedJob.value = newOrg.jobs[0];\n      } else {\n        selectedJob.value = null;\n      }\n    });\n    const __returned__ = {\n      loadingComponent,\n      errorComponent,\n      asyncComponentOptions,\n      LineChart,\n      MainSection,\n      TitleBar,\n      HeroBar,\n      CardWidget,\n      CardComponent,\n      ClientsTable,\n      Notification,\n      CardTransactionBar,\n      CardClientBar,\n      TitleSubBar,\n      store,\n      titleStack,\n      clientBarItems,\n      transactionBarItems,\n      chartData,\n      fillChartData,\n      selectedOrganization,\n      organizationJobs,\n      selectedJob,\n      selectedJobApplications,\n      selectedJobApplicationsCount,\n      selectedOrganizationName,\n      computed,\n      ref,\n      onMounted,\n      watch,\n      defineAsyncComponent,\n      useStore,\n      mdiAccountMultiple,\n      mdiCartOutline,\n      mdiChartTimelineVariant,\n      mdiFinance,\n      mdiMonitorCellphone,\n      mdiReload,\n      mdiChartPie,\n      chartConfig\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","ref","onMounted","watch","defineAsyncComponent","useStore","mdiAccountMultiple","mdiCartOutline","mdiChartTimelineVariant","mdiFinance","mdiMonitorCellphone","mdiReload","mdiChartPie","chartConfig","loadingComponent","template","errorComponent","asyncComponentOptions","loading","error","delay","timeout","LineChart","loader","MainSection","TitleBar","HeroBar","CardWidget","CardComponent","ClientsTable","Notification","CardTransactionBar","CardClientBar","TitleSubBar","store","titleStack","orgName","getters","selectedOrganization","name","clientBarItems","state","clients","slice","transactionBarItems","history","chartData","fillChartData","value","sampleChartData","organizationJobs","jobs","selectedJob","selectedJobApplications","applications","selectedJobApplicationsCount","length","selectedOrganizationName","userOrganizations","dispatch","newOrg"],"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/views/Home.vue"],"sourcesContent":["<script setup>\nimport { computed, ref, onMounted, watch, defineAsyncComponent } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n  mdiAccountMultiple,\n  mdiCartOutline,\n  mdiChartTimelineVariant,\n  mdiFinance,\n  mdiMonitorCellphone,\n  mdiReload,\n  mdiChartPie,\n} from \"@mdi/js\";\nimport * as chartConfig from \"@/components/Charts/chart.config.js\";\n\n// Lazy load components with loading and error states\nconst loadingComponent = {\n  template: '<div class=\"loading\">Loading...</div>',\n};\n\nconst errorComponent = {\n  template: '<div class=\"error\">Error loading component</div>',\n};\n\nconst asyncComponentOptions = {\n  loading: loadingComponent,\n  error: errorComponent,\n  delay: 200,\n  timeout: 5000,\n};\n\n// Define async components\nconst LineChart = defineAsyncComponent({\n  loader: () => import(\"@/components/Charts/LineChart.vue\"),\n  ...asyncComponentOptions,\n});\nconst MainSection = defineAsyncComponent(() =>\n  import(\"@/components/MainSection.vue\")\n);\nconst TitleBar = defineAsyncComponent(() =>\n  import(\"@/components/TitleBar.vue\")\n);\nconst HeroBar = defineAsyncComponent(() => import(\"@/components/HeroBar.vue\"));\nconst CardWidget = defineAsyncComponent(() =>\n  import(\"@/components/CardWidget.vue\")\n);\nconst CardComponent = defineAsyncComponent(() =>\n  import(\"@/components/CardComponent.vue\")\n);\nconst ClientsTable = defineAsyncComponent(() =>\n  import(\"@/components/ClientsTable.vue\")\n);\nconst Notification = defineAsyncComponent(() =>\n  import(\"@/components/Notification.vue\")\n);\nconst CardTransactionBar = defineAsyncComponent(() =>\n  import(\"@/components/CardTransactionBar.vue\")\n);\nconst CardClientBar = defineAsyncComponent(() =>\n  import(\"@/components/CardClientBar.vue\")\n);\nconst TitleSubBar = defineAsyncComponent(() =>\n  import(\"@/components/TitleSubBar.vue\")\n);\n\nconst store = useStore();\n\nconst titleStack = computed(() => {\n  const orgName = store.getters.selectedOrganization?.name || \"\";\n  return [\"Admin\", \"Dashboard\", orgName];\n});\n\nconst clientBarItems = computed(() => store.state.clients?.slice(0, 3) || []);\n\nconst transactionBarItems = computed(\n  () => store.state.history?.slice(0, 3) || []\n);\n\nconst chartData = ref(null);\n\nconst fillChartData = () => {\n  chartData.value = chartConfig.sampleChartData();\n};\n\nconst selectedOrganization = computed(\n  () => store.getters.selectedOrganization || {}\n);\n\nconst organizationJobs = computed(() => selectedOrganization.value?.jobs || []);\n\nconst selectedJob = ref(null);\n\nconst selectedJobApplications = computed(() => {\n  if (!selectedJob.value) return [];\n  return selectedJob.value.applications || [];\n});\n\nconst selectedJobApplicationsCount = computed(\n  () => selectedJobApplications.value.length\n);\n\nconst selectedOrganizationName = computed(\n  () => selectedOrganization.value?.name || \"No Organization Selected\"\n);\n\n// Initialize data\nonMounted(() => {\n  fillChartData();\n  // Make sure organizations are initialized\n  if (!store.state.userOrganizations.length) {\n    store.dispatch(\"initializeOrganizations\");\n  }\n  // Fetch clients and history if not already loaded\n  if (!store.state.clients.length) {\n    store.dispatch(\"fetch\", \"clients\");\n  }\n  if (!store.state.history.length) {\n    store.dispatch(\"fetch\", \"history\");\n  }\n  // Set first job as default when component mounts or organization changes\n  if (organizationJobs.value.length > 0) {\n    selectedJob.value = organizationJobs.value[0];\n  }\n});\n\n// Watch for organization changes to update selected job\nwatch(\n  () => selectedOrganization.value,\n  (newOrg) => {\n    if (newOrg?.jobs?.length > 0) {\n      selectedJob.value = newOrg.jobs[0];\n    } else {\n      selectedJob.value = null;\n    }\n  }\n);\n</script>\n\n<!-- to-do make the card widgets dynamic -->\n\n<template>\n  <title-bar :title-stack=\"titleStack\" />\n  <hero-bar>\n    <div class=\"flex items-center space-x-4\">\n      <span>Job Posting Dashboard</span>\n      <select\n        v-if=\"organizationJobs.length\"\n        v-model=\"selectedJob\"\n        class=\"rounded-lg border-gray-300 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-300\"\n      >\n        <option v-for=\"job in organizationJobs\" :key=\"job.id\" :value=\"job\">\n          {{ job.id }}\n        </option>\n      </select>\n    </div>\n  </hero-bar>\n  <main-section>\n    <div class=\"grid grid-cols-1 gap-6 lg:grid-cols-3 mb-6\">\n      <card-widget\n        trend=\"12%\"\n        trend-type=\"up\"\n        color=\"text-emerald-500\"\n        :icon=\"mdiAccountMultiple\"\n        :number=\"selectedJobApplicationsCount\"\n        :label=\"'Applications for ' + (selectedJob?.name || 'All Jobs')\"\n      />\n      <card-widget\n        trend=\"12%\"\n        trend-type=\"down\"\n        color=\"text-blue-500\"\n        :icon=\"mdiCartOutline\"\n        :number=\"7770\"\n        prefix=\"$\"\n        label=\"Sales\"\n      />\n      <card-widget\n        trend=\"Overflow\"\n        trend-type=\"alert\"\n        color=\"text-red-500\"\n        :icon=\"mdiChartTimelineVariant\"\n        :number=\"256\"\n        suffix=\"%\"\n        label=\"Performance\"\n      />\n    </div>\n\n    <div class=\"grid grid-cols-1 xl:grid-cols-2 gap-6 mb-6\">\n      <div class=\"flex flex-col justify-between\">\n        <card-transaction-bar\n          v-for=\"(transaction, index) in transactionBarItems\"\n          :key=\"index\"\n          :amount=\"transaction.amount\"\n          :date=\"transaction.date\"\n          :business=\"transaction.business\"\n          :type=\"transaction.type\"\n          :name=\"transaction.name\"\n          :account=\"transaction.account\"\n        />\n      </div>\n      <div class=\"flex flex-col justify-between\">\n        <card-client-bar\n          v-for=\"client in clientBarItems\"\n          :key=\"client.id\"\n          :name=\"client.name\"\n          :login=\"client.login\"\n          :date=\"client.created\"\n          :progress=\"client.progress\"\n        />\n      </div>\n    </div>\n\n    <title-sub-bar :icon=\"mdiChartPie\" title=\"Trends overview\" />\n\n    <card-component\n      title=\"Performance\"\n      :icon=\"mdiFinance\"\n      :header-icon=\"mdiReload\"\n      class=\"mb-6\"\n      @header-icon-click=\"fillChartData\"\n    >\n      <div v-if=\"chartData\">\n        <line-chart :data=\"chartData\" class=\"h-96\" />\n      </div>\n    </card-component>\n\n    <title-sub-bar\n      :icon=\"mdiAccountMultiple\"\n      :title=\"`Applications for ${selectedOrganizationName}`\"\n    />\n\n    <notification color=\"info\" :icon=\"mdiMonitorCellphone\">\n      Click on applicants to view the interview prep doc or the analytics sheet.\n    </notification>\n\n    <card-component :icon=\"mdiMonitorCellphone\" title=\"Applicants\" has-table>\n      <clients-table :checkable=\"false\" :items=\"selectedJobApplications\" />\n    </card-component>\n  </main-section>\n</template>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}