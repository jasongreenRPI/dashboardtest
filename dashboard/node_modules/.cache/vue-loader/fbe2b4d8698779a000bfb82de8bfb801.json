{"remainingRequest":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/Charts/LineChart.vue?vue&type=template&id=c4f8f9c0","dependencies":[{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/Charts/LineChart.vue","mtime":1744916915403},{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/babel-loader/lib/index.js","mtime":1744916963386},{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/vue-loader/dist/templateLoader.js","mtime":1744916962924},{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1744916963305},{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/vue-loader/dist/index.js","mtime":1744916962818}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGNhbnZhcyByZWY9InJvb3QiIC8+Cg=="},{"version":3,"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/Charts/LineChart.vue"],"names":[],"mappings":";EA4DE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC","file":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/Charts/LineChart.vue","sourceRoot":"","sourcesContent":["<script setup>\nimport { ref, watch, computed, onMounted } from 'vue'\nimport {\n  Chart,\n  LineElement,\n  PointElement,\n  LineController,\n  LinearScale,\n  CategoryScale,\n  Tooltip\n} from 'chart.js'\n\nconst props = defineProps({\n  data: {\n    type: Object,\n    required: true\n  }\n})\n\nconst root = ref(null)\n\nlet chart\n\nChart.register(LineElement, PointElement, LineController, LinearScale, CategoryScale, Tooltip)\n\nonMounted(() => {\n  chart = new Chart(root.value, {\n    type: 'line',\n    data: props.data,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          display: false\n        },\n        x: {\n          display: true\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    }\n  })\n})\n\nconst chartData = computed(() => props.data)\n\nwatch(chartData, data => {\n  if (chart) {\n    chart.data = data\n    chart.update()\n  }\n})\n</script>\n\n<template>\n  <canvas ref=\"root\" />\n</template>\n"]}]}