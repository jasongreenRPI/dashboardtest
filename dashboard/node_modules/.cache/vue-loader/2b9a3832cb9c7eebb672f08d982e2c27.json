{"remainingRequest":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/GrowingNumber.vue?vue&type=template&id=354901d0","dependencies":[{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/GrowingNumber.vue","mtime":1744916915404},{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/babel-loader/lib/index.js","mtime":1744916963386},{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/vue-loader/dist/templateLoader.js","mtime":1744916962924},{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1744916963305},{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/vue-loader/dist/index.js","mtime":1744916962818}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj57eyBwcmVmaXggfX17eyBuZXdWYWx1ZUZvcm1hdHRlZCB9fXt7IHN1ZmZpeCB9fTwvZGl2Pgo="},{"version":3,"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/GrowingNumber.vue"],"names":[],"mappings":";EA4DE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/GrowingNumber.vue","sourceRoot":"","sourcesContent":["<script setup>\nimport { computed, ref, watch, onMounted } from 'vue'\nimport numeral from 'numeral'\n\nconst props = defineProps({\n  prefix: {\n    type: String,\n    default: null\n  },\n  suffix: {\n    type: String,\n    default: null\n  },\n  value: {\n    type: Number,\n    default: 0\n  },\n  duration: {\n    type: Number,\n    default: 500\n  }\n})\n\nconst newValue = ref(0)\n\nconst newValueFormatted = computed(\n  () => newValue.value < 1000 ? newValue.value : numeral(newValue.value).format('0,0')\n)\n\nconst value = computed(() => props.value)\n\nconst grow = m => {\n  const v = Math.ceil(newValue.value + m)\n\n  if (v > value.value) {\n    newValue.value = value.value\n    return false\n  }\n\n  newValue.value = v\n\n  setTimeout(() => {\n    grow(m)\n  }, 25)\n}\n\nconst growInit = () => {\n  grow(props.value / (props.duration / 25))\n}\n\nwatch(value, () => {\n  growInit()\n})\n\nonMounted(() => {\n  growInit()\n})\n</script>\n\n<template>\n  <div>{{ prefix }}{{ newValueFormatted }}{{ suffix }}</div>\n</template>s\n"]}]}