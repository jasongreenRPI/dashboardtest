{"remainingRequest":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/IconRounded.vue?vue&type=template&id=3e3ac7f4","dependencies":[{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/IconRounded.vue","mtime":1744916915404},{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/babel-loader/lib/index.js","mtime":1744916963386},{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/vue-loader/dist/templateLoader.js","mtime":1744916962924},{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1744916963305},{"path":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/node_modules/vue-loader/dist/index.js","mtime":1744916962818}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGljb24KICAgIDpwYXRoPSJpY29uIgogICAgOnc9InciCiAgICA6aD0iaCIKICAgIHNpemU9IjI0IgogICAgY2xhc3M9InJvdW5kZWQtZnVsbCIKICAgIDpjbGFzcz0iaWNvblN0eWxlIgogIC8+Cg=="},{"version":3,"sources":["/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/IconRounded.vue"],"names":[],"mappings":";EAkCE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC","file":"/Users/jasongreenberg/Desktop/dashboard/vue-admin-dashboard/src/components/IconRounded.vue","sourceRoot":"","sourcesContent":["<script setup>\nimport { useStore } from 'vuex'\nimport { computed } from 'vue'\nimport { colorsText, colorsBg } from '@/colors.js'\nimport Icon from '@/components/Icon.vue'\n\nconst props = defineProps({\n  icon: {\n    type: String,\n    required: true\n  },\n  type: {\n    type: String,\n    required: true\n  },\n  w: {\n    type: String,\n    default: 'w-12'\n  },\n  h: {\n    type: String,\n    default: 'h-12'\n  },\n  bg: Boolean\n})\n\nconst store = useStore()\n\nconst iconStyle = computed(\n  () => props.bg ? colorsBg[props.type] : [colorsText[props.type], `${store.state.lightBgStyle} dark:bg-gray-800`]\n)\n</script>\n\n<template>\n  <icon\n    :path=\"icon\"\n    :w=\"w\"\n    :h=\"h\"\n    size=\"24\"\n    class=\"rounded-full\"\n    :class=\"iconStyle\"\n  />\n</template>\n"]}]}